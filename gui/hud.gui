######################################################
#################### META INFO #######################
######################################################

widget = {
	size = { 100% 100% }
	name = "meta_info"
	visible = "[IsDefaultGUIMode]"
	layer = bottom

	using = Animation_ShowHide_Standard

	flowcontainer = {
		name = "observer_status"
		visible = "[IsObserver]"
		parentanchor = bottom|left
		position = { 240 -50 }
		ignoreinvisible = yes

		background = {
			using = Background_Area_Dark
		}

		text_single = {
			name = "global_observer_indication"
			visible = "[Not(GetPlayer.IsValid)]"
			text = "GLOBAL_OBSERVER"
		}

		text_single = {
			name = "player_observer_indication"
			visible = "[GetPlayer.IsValid]"
			text = "PLAYER_OBSERVER"
		}

		button_cancel = {
			name = "cancel_button"
			visible = "[GetPlayer.IsValid]"

			size = { 30 30 }
			onclick = "[ClearObserver]"
			tooltip = "OBSERVER_MODE_ON"
		}

		icon_observer = {
			size = { 30 30 }
			visible = "[Not(GetPlayer.IsValid)]"
		}
	}

	## Build version
	text_single = {
		name = "build_version_text"
		position = { 5 5 }
		visible = "[Not(ReleaseMode)]"

		tooltip = "[GetBuildVersionDescription]"

		text = "VERSION_SHORT"
		default_format = "#low"
		max_width = 300
	}

	error_horse = {
		parentanchor = bottom|left
		position = { 610 -10 }
		visible = "[And( Not( IsPauseMenuShown ), Not(ReleaseMode) )]"
	}
}

widget = {
	name = "ingame_topbar"
	visible = "[InGameTopbar.ShouldBeVisible]"
	size = { 100% 100% }
	layer = middle

	### Alerts
	notifications_alerts = {
		visible = "[Not( IsPauseMenuShown )]"
		parentanchor = top|right
		position = { -720 0 }
		spacing = 10

		using = Animation_ShowHide_Quick
	}

	### AVE MARIA INSTITUTIONS WINDOW
	widget = {
		name = "institutions_window"
		parentanchor = top|right
		#movable = no
		layer = windows_layer
		#ignoreinvisible = yes
		
		using = Window_Size_MainTab
		using = Window_Background
				
		visible = "[GetVariableSystem.Exists( 'am_institutions_gui_toggle' )]"
		datacontext = "[GetVariableSystem]"
		datacontext = "[GetPlayer]"		

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
			using = Window_Position_MainTab
			
			on_start = "[GetVariableSystem.Set( 'right_window_open', 'true' )]"

		}
		
		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
			using = Window_Position_MainTab_Hide
			
			on_start = "[GetVariableSystem.Clear( 'right_window_open')]"
		}
		
		## Margin
		margin_widget = {
			size = { 100% 100% }
			margin = { 0 26 }
			margin_right = 20

			using = Window_Background
			# ignoreinvisible = yes
			
			widget = {
				size = { 100% 100% }
				#ignoreinvisible = yes
				#using = Window_Margins

				## Main box
				vbox = {
					using = Window_Margins

					## Header
					header_with_picture = {
						layoutpolicy_horizontal = expanding	
						minimumsize = { 0 180 }		

						blockoverride "header_text"
						{
							text = "INSTITUTIONS_WINDOW"
							#margin = { -30 0 }
							#parentanchor = center
						}

						blockoverride "size" {
							size = { 100% 200 }
						}

						blockoverride "illustration_texture" {
							texture = "gfx/interface/illustrations/window_headers/header_institutions.dds"
						}
						
						blockoverride "button_close"
						{
							onclick = "[GetVariableSystem.Clear('am_institutions_gui_toggle')]"
							onclick = "[GetVariableSystem.Clear('am_institutions_army_gui_toggle')]"
							onclick = "[GetVariableSystem.Clear('am_institutions_senate_gui_toggle')]"
							onclick = "[GetVariableSystem.Clear('am_institutions_administration_gui_toggle')]"
							onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
							onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_administration_gui_toggle')]"
							onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_dawa_mission_gui_toggle')]"
						}

						## Image of the Title (not working 05/11/20 - need a GetPlayer to work)
						widget = {
							layoutpolicy_vertical = growing
							allow_outside = yes
							size = { 89 98 }
	
							coa_realm_big_crown = {
								parentanchor = top|hcenter
								position = { 5 5 }
							}
						}

						vbox = {
							#margin_top = 22
							margin_bottom = 52							

							hbox = {
								spacing = 20
								layoutpolicy_vertical = expanding
								background = {
									using = Background_Area
								}
								text_single = {
									name = "realm_name"
									text = "[GetPlayer.GetPrimaryTitle.GetNameNoTooltip|U]"
								}
	
								text_single = {
									name = "realm_type"
									text = "MY_REALM_WINDOW_TYPE"
								}

							}
						}

						
					}

					## Another box (this is a matrioshka challenge !) this one is for the background of the tab
					vbox = {
						name = "institutions_list"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						# background of the box
						background = {
							#texture = "gfx/interface/illustrations/event_scenes/z_ave_maria_constantinople_akkubita_dining_hall.dds"
							margin = { -5 0 }
							fittype = end
							alpha = 0.8
							framesize = { 1200 848 }

							modify_texture = {
								texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
								blend_mode = alphamultiply
							}
						}
						
						scrollbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							minimumsize = { 0 350 }

							blockoverride "scrollbox_content"
							{
								margin = { 10 10 }
								spacing = 10

								hbox = {
									divider = {
										layoutpolicy_horizontal = expanding
									}
								}	

								## AVE MARIA INSTITUTIONS BOXES
								vbox = {
									layoutpolicy_horizontal = expanding
									#layoutpolicy_vertical = expanding
									spacing = 10

									## Divider for visuals
									divider = {
										datacontext = "[GetScriptedGui('am_institutions_roman_administration_can_see_senate')]"
										visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										
										layoutpolicy_horizontal = expanding
									}

									## Roman Administration Box
									vbox = {
										name = "institution_administration"
										datacontext = "[GetScriptedGui('am_institutions_roman_administration_can_see_roman_administration')]"
										visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = expanding
										margin = { 5 5 }
										spacing = 2
	
										background = {
											using = Background_Area_Light
											spriteType = Corneredtiled
										}
	
										button_standard = {
											layoutpolicy_horizontal = expanding
											parentanchor = left
											size = { 0 80 }	
					
											onclick = "[GetScriptedGui('am_institutions_roman_administration_get_administrative_officials_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End ) ]"
											onclick = "[GetScriptedGui('am_institutions_roman_administration_get_logothetetes_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											onclick = "[GetScriptedGui('am_institutions_roman_administration_get_sakellion_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											onclick = "[GetScriptedGui('am_institutions_roman_administration_get_quaestor_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											onclick = "[GetVariableSystem.Toggle( 'am_institutions_administration_gui_toggle' )]"
											onclick = "[GetVariableSystem.Clear( 'am_institutions_senate_gui_toggle' )]"
											onclick = "[GetVariableSystem.Clear( 'am_institutions_army_gui_toggle' )]"

											background = {
												fittype = centercrop
												texture = "gfx/interface/illustrations/decisions/z_ave_maria_clerk_desk.dds"
												modify_texture = {
													texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
													blend_mode = alphamultiply
												}
											}
	
											text_single = {
												margin_top = 10
												margin_left = 20
												layoutpolicy_horizontal = expanding
												text = "The Administration"
												using = Font_Size_Medium
												#default_format = "#low"
											}
										}	
										
									}

									## Divider for visuals
									divider = {
										datacontext = "[GetScriptedGui('am_institutions_roman_administration_can_see_senate')]"
										visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										
										layoutpolicy_horizontal = expanding
									}
									
									## Roman  Army Box
									vbox = {
										name = "institution_army"
										datacontext = "[GetScriptedGui('am_institutions_roman_administration_can_see_roman_army')]"
										visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = expanding
										margin = { 5 5 }
										spacing = 2
	
										background = {
											using = Background_Area_Light
											spriteType = Corneredtiled
										}
	
										button_standard = {
											layoutpolicy_horizontal = expanding
											#parentanchor = center
											size = { 0 80 }	
					
											onclick = "[GetScriptedGui('am_institutions_roman_administration_get_military_officials_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End ) ]"
											onclick = "[GetScriptedGui('am_institutions_roman_administration_get_doukaton_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End ) ]"
											onclick = "[GetScriptedGui('am_institutions_roman_administration_get_theme_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End ) ]"
											onclick = "[GetScriptedGui('am_institutions_roman_administration_get_domestikos_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											onclick = "[GetScriptedGui('am_institutions_roman_administration_get_antioch_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											onclick = "[GetScriptedGui('am_institutions_roman_administration_get_anatolia_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											onclick = "[GetScriptedGui('am_institutions_roman_administration_get_excubitor_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											onclick = "[GetScriptedGui('am_institutions_roman_administration_get_vigla_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											onclick = "[GetScriptedGui('am_institutions_roman_administration_get_droungarios_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											onclick = "[GetScriptedGui('am_institutions_roman_administration_get_hikanatoi_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											onclick = "[GetScriptedGui('am_institutions_roman_administration_get_noumeroi_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											onclick = "[GetVariableSystem.Toggle( 'am_institutions_army_gui_toggle' )]"
											onclick = "[GetVariableSystem.Clear( 'am_institutions_administration_gui_toggle' )]"
											onclick = "[GetVariableSystem.Clear( 'am_institutions_senate_gui_toggle' )]"

											background = {
												fittype = centercrop
												texture = "gfx/interface/illustrations/decisions/z_ave_maria_roman_victory_arch.dds"
												modify_texture = {
													texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
													blend_mode = alphamultiply
												}
											}

	
											text_single = {
												margin_top = 10
												margin_left = 20
												layoutpolicy_horizontal = expanding
												text = "The Army"
												using = Font_Size_Medium
												#default_format = "#low"
											}
										}
	
										
									}

									## Divider for visuals
									divider = {
										datacontext = "[GetScriptedGui('am_institutions_roman_administration_can_see_senate')]"
										visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										
										layoutpolicy_horizontal = expanding
									}
									
									## Roman Senate box
									vbox = {
										name = "institution_senate"
										datacontext = "[GetScriptedGui('am_institutions_roman_administration_can_see_senate')]"
										visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = expanding
										margin = { 5 5 }
										spacing = 2
	
										background = {
											using = Background_Area_Light
											spriteType = Corneredtiled
										}
										

										button_standard = {
											layoutpolicy_horizontal = expanding
											#parentanchor = center
											size = { 0 80 }
																					
											onclick = "[GetScriptedGui('am_institutions_roman_administration_get_senator_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End ) ]"
											onclick = "[GetVariableSystem.Toggle( 'am_institutions_senate_gui_toggle' )]"
											onclick = "[GetVariableSystem.Clear( 'am_institutions_army_gui_toggle' )]"
											onclick = "[GetVariableSystem.Clear( 'am_institutions_administration_gui_toggle' )]"

											text_single = {
												margin_top = 10
												margin_left = 20
												layoutpolicy_horizontal = expanding
												text = "The Senate"
												using = Font_Size_Medium
												#default_format = "#low"
											}
										
											background = {
												fittype = centercrop
												texture = "gfx/interface/illustrations/decisions/decision_ave_maria_roman_administration_senate.dds"
												modify_texture = {
													texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
													blend_mode = alphamultiply
												}
											}					
											
										}									
										
									}								

									## Divider for visuals
									divider = {
										datacontext = "[GetScriptedGui('am_institutions_roman_administration_can_see_senate')]"
										visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										
										layoutpolicy_horizontal = expanding
									}

									## Fatimid Army Box
									vbox = {
										name = "institution_fatimid_army"
										datacontext = "[GetScriptedGui('am_institutions_islamic_empire_can_see_fatimid_army_factions')]"
										visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = expanding
										margin = { 5 5 }
										spacing = 2
	
										background = {
											using = Background_Area_Light
											spriteType = Corneredtiled
										}
	
										button_standard = {
											layoutpolicy_horizontal = expanding
											parentanchor = left
											size = { 0 80 }	
					
											#onclick = "[GetScriptedGui('am_institutions_roman_administration_get_administrative_officials_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End ) ]"
											onclick = "[GetVariableSystem.Toggle( 'am_institutions_fatimid_army_factions_gui_toggle' )]"
											onclick = "[GetVariableSystem.Clear( 'am_institutions_fatimid_administration_gui_toggle' )]"
											onclick = "[GetVariableSystem.Clear( 'am_institutions_fatimid_dawa_mission_gui_toggle' )]"

											background = {
												fittype = centercrop
												texture = "gfx/interface/illustrations/decisions/z_ave_maria_fatimid_army.dds"
												modify_texture = {
													texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
													blend_mode = alphamultiply
												}
											}
	
											text_single = {
												margin_top = 10
												margin_left = 20
												layoutpolicy_horizontal = expanding
												text = "The Army"
												using = Font_Size_Medium
												#default_format = "#low"
											}
										}	
										
									}

									## Divider for visuals
									divider = {
										datacontext = "[GetScriptedGui('am_institutions_islamic_empire_can_see_fatimid_army_factions')]"
										visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										
										layoutpolicy_horizontal = expanding
									}

									## Fatimid Administration Box
									vbox = {
										name = "institution_fatimid_administration"
										datacontext = "[GetScriptedGui('am_institutions_islamic_empire_can_see_fatimid_army_factions')]"
										visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = expanding
										margin = { 5 5 }
										spacing = 2
	
										background = {
											using = Background_Area_Light
											spriteType = Corneredtiled
										}
	
										button_standard = {
											layoutpolicy_horizontal = expanding
											parentanchor = left
											size = { 0 80 }	
					
											onclick = "[GetScriptedGui('am_institutions_islamic_empire_fatimid_get_diwan_leaders').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End ) ]"
											onclick = "[GetVariableSystem.Toggle( 'am_institutions_fatimid_administration_gui_toggle' )]"
											onclick = "[GetVariableSystem.Clear( 'am_institutions_fatimid_army_factions_gui_toggle' )]"
											onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_dawa_mission_gui_toggle')]"
											# onclick = "[GetVariableSystem.Clear( 'am_institutions_senate_gui_toggle' )]"
											# onclick = "[GetVariableSystem.Clear( 'am_institutions_army_gui_toggle' )]"

											background = {
												fittype = centercrop
												texture = "gfx/interface/illustrations/decisions/z_ave_maria_muslim_reception_courtyard.dds"
												modify_texture = {
													texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
													blend_mode = alphamultiply
												}
											}
	
											text_single = {
												margin_top = 10
												margin_left = 20
												layoutpolicy_horizontal = expanding
												text = "The Administration"
												using = Font_Size_Medium
												#default_format = "#low"
											}
										}	
										
									}

									## Divider for visuals
									divider = {
										datacontext = "[GetScriptedGui('am_institutions_islamic_empire_can_see_fatimid_army_factions')]"
										visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										
										layoutpolicy_horizontal = expanding
									}

									## Fatimid Dawa Box
									vbox = {
										name = "institution_fatimid_dawa_mission"
										datacontext = "[GetScriptedGui('am_institutions_islamic_empire_can_see_fatimid_army_factions')]"
										visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = expanding
										margin = { 5 5 }
										spacing = 2
	
										background = {
											using = Background_Area_Light
											spriteType = Corneredtiled
										}
	
										button_standard = {
											layoutpolicy_horizontal = expanding
											parentanchor = left
											size = { 0 80 }	
					
											#onclick = "[GetScriptedGui('am_institutions_roman_administration_get_administrative_officials_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End ) ]"
											onclick = "[GetVariableSystem.Toggle( 'am_institutions_fatimid_dawa_mission_gui_toggle' )]"
											onclick = "[GetVariableSystem.Clear( 'am_institutions_fatimid_army_factions_gui_toggle' )]"
											onclick = "[GetVariableSystem.Clear( 'am_institutions_fatimid_administration_gui_toggle' )]"
											# onclick = "[GetVariableSystem.Clear( 'am_institutions_senate_gui_toggle' )]"
											# onclick = "[GetVariableSystem.Clear( 'am_institutions_army_gui_toggle' )]"

											background = {
												fittype = centercrop
												texture = "gfx/interface/illustrations/decisions/z_ave_maria_quran_recitation.dds"
												modify_texture = {
													texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
													blend_mode = alphamultiply
												}
											}
	
											text_single = {
												margin_top = 10
												margin_left = 20
												layoutpolicy_horizontal = expanding
												text = "Da'Wa Mission"
												using = Font_Size_Medium
												#default_format = "#low"
											}
										}	
										
									}
								}
							}					
							
						}						
					}					
				}
			}
		}
	}

	### AVE MARIA - ROMAN SENATE WINDOW
	window = {
		name = "senate_window"
		parentanchor = center
		size = { 1000 950 }
		position = { -150 0 }
		layer = windows_layer
		#datacontext = "[GetScriptedGui('am_institutions_senate_gui_toggle')]"
		#visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

		visible = "[GetVariableSystem.Exists( 'am_institutions_senate_gui_toggle' )]"
		
		using = Window_Background
		using = Window_Decoration

		## Main box
		vbox = {
			using = Window_Margins
			parentanchor = top
			## Header
			header_pattern = {
				layoutpolicy_horizontal = expanding
				blockoverride "header_text"
				{
					text = "roman_administration_senate_tab_header"
				}
				blockoverride "button_close"
				{
					# datacontext = "[GetScriptedGui('am_institutions_senate_gui_close')]"
					# onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					onclick = "[GetVariableSystem.Clear('am_institutions_senate_gui_toggle')]"
				}
			}

			## Main Box where senate things are
			hbox = {
				parentanchor = top
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				
				widget = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					## 
					vbox = {
						parentanchor = top
						spacing = 10
						#name = "main_senate_box"
						#spacing = 15

						## Line to visually divide stuff
						divider = {
							layoutpolicy_horizontal = expanding
						}

						# background = {
						# 	texture = "gfx/interface/illustrations/event_scenes/temple.dds"
						# 	margin = { 0 0 }
						# 	fittype = centercrop
						# 	alpha = 0.8
						# 	using = Mask_Rough_Edges
						# }

						### Box w
						vbox = {
							parentanchor = top
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							## background behind senators list
							background = {
								#texture = "gfx/interface/illustrations/event_scenes/temple.dds"
								margin = { 0 0 }
								fittype = centercrop
								alpha = 0.8
								using = Mask_Rough_Edges
							}

							## Box where senators dynamic box entries are
							hbox = {
								parentanchor = top
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								scrollbox  = {
									name = "character_senate_grid"
									parentanchor = top
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
	
									blockoverride "scrollbox_margins" { }
	
									blockoverride "scrollbox_content"
									{
										spacing = 20
										margin = { 0 20 }
	
										vbox = {
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											spacing = 0
	
											dynamicgridbox = {
												datamodel = "[GetPlayer.MakeScope.GetList('list_roman_administration_senators')]"
												datamodel_wrap = 7
												flipdirection = yes
												
												state = {
													name = get_list
													trigger_on_create = yes
													duration = 2
													# on_start = "[GetScriptedGui('am_institutions_roman_administration_get_senator_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													next = get_list
												}
	
												item = {
													portrait_shoulders = {
														datacontext = "[Scope.GetCharacter]"
	
														blockoverride "description_relation_text" {
															text = "[Character.GetPlayerGuestDescription]"
														}

														background = {
															using = Background_Area
														}
													}
												}
											}
										}
									}								
								}
							}
							
						}
					}
				}
			
			}

			## Divider for visuals
			divider = {
				layoutpolicy_horizontal = expanding
			}

			## Footer area
			hbox = {
				name = "footer_senate"
				layoutpolicy_horizontal = expanding
				
				## Text at the bottom left with display depending on Senate current political relevance
				# textbox = {
				# 	datacontext = "[GetScriptedGui('am_institutions_roman_administration_senate_political_relevance_irrelevant')]"
				# 	visible = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					
				# 	text_single = {
				# 		text = "The Senate's political relevance is currently #non-existent#!: No related events will ever happen."
				# 		position = { 5 -5 }
						
				# 	}					
				# }
				# textbox = {
				# 	datacontext = "[GetScriptedGui('am_institutions_roman_administration_senate_political_relevance_medium')]"
				# 	visible = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					
				# 	text_single = {
				# 		text = "The Senate's political relevance is currently #medium#!: Only minor related events will happen."
				# 		position = { 5 -5 }
						
				# 	}
				# }
				# textbox = {
				# 	datacontext = "[GetScriptedGui('am_institutions_roman_administration_senate_political_relevance_high')]"
				# 	visible = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					
				# 	text_single = {
				# 		text = "The Senate's political relevance is currently #high#!: Major related events will occur."
				# 		position = { 5 -5 }
						
				# 	}
				# }
				

				# vbox = {
				# 	parentanchor = hcenter
				# 	layoutpolicy_horizontal = expanding
				# 	progressbar_standard = {
				# 		datacontext = "[GetPlayer.MakeScope]"
				# 		#visible = ""
				# 		name = "loyalty"
				# 		size = { 240 25 }
				# 		min = 0
				# 		max = "[IntToFloat(GetDataModelSize(Scope.GetList('list_roman_administration_senators')))]"
				# 		value = "[IntToFloat(GetDataModelSize(Scope.GetList('list_roman_administration_supportive_senators')))]"

				# 		text_single = {
				# 			parentanchor = top|hcenter
				# 			position = { 0 -2 }
				# 			text = "[Senate Approval: [GetDataModelSize(Scope.GetList('list_roman_administration_supportive_senators'))] / [GetDataModelSize(Scope.GetList('list_roman_administration_senators'))]"
				# 		}
				# 	}
				# }

				## Button to give more political power to the senate for alt hist purpose
				# vbox = {
				# 	button_decision_entry = {
				# 		name = "give_more_political_power_to_the_senate"
				# 	}
				# }
			}
		}
	}

	### AVE MARIA - ROMAN ARMY WINDOW
	window = {
		name = "army_window"
		parentanchor = center
		size = { 1000 950 }
		position = { -150 0 }
		layer = windows_layer
		# datacontext = "[GetScriptedGui('am_institutions_army_gui_toggle')]"
		# visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

		visible = "[GetVariableSystem.Exists( 'am_institutions_army_gui_toggle' )]"
		
		using = Window_Background
		using = Window_Decoration


		## Main box
		vbox = {
			using = Window_Margins
			
			## Header
			header_pattern = {
				layoutpolicy_horizontal = expanding
				blockoverride "header_text"
				{
					text = "[Localize('roman_administration_army_tab_header')]"
				}
				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Clear('am_institutions_army_gui_toggle')]"
				}
			}

			## gfx tests
			# icon = {
			# 	texture = "gfx/interface/icons/institutions/roman_header_ornament.dds"
			# 	alpha = 0.9
			# }
			# background = {
			# 	texture = "gfx/interface/icons/institutions/roman_background_fill.dds"
			# 	fittype = centercrop
			# 	alpha = 0.1

			# 	using = Mask_Rough_Edges
			# }
			# icon = {
			# 	name = "roman_tile_frame_top"
			# 	#parentanchor = hcenter
			# 	size = { 920 50 }
			# 	#position = { 0 5 }

			# 	texture = "gfx/interface/icons/institutions/roman_tooltip_title.dds"
			# 	spriteType = Corneredtiled
			# 	spriteborder = { 25 0 }
			# 	#mirror = vertical
			# 	texture_density = 1

			# 	hbox = {
			# 		position = { 0 0 }
			# 		layoutpolicy_horizontal = expanding
			# 		text_label_center = {
			# 			text = "Military Offices"
			# 			using = Font_Size_Medium
			# 			default_format = "#high"								
			# 		}
			# 	}
			# }
			
			

			## Main Box where army things are
			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				## background gfx tests
				# background = {
				# 	texture = "gfx/interface/icons/institutions/roman_background_fill.dds"
				# 	fittype = centercrop
				# 	alpha = 0.1
	
				# 	using = Mask_Rough_Edges
				# }
				
				widget = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

				

					## Main box
					vbox = {
						spacing = 10

						## High military official list box
						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							spacing = 10

							background = {
								#texture = "gfx/interface/illustrations/event_scenes/z_ave_maria_constantinople_akkubita_dining_hall.dds"
								fittype = centercrop
								alpha = 0.8

								using = Mask_Rough_Edges
							}

							hbox = {
								layoutpolicy_horizontal = expanding
								text_label_center = {
									text = "Military Offices"
									using = Font_Size_Medium
									default_format = "#high"								
								}
							}

							## Line to visually divide stuff
							divider = {
								layoutpolicy_horizontal = expanding
							}

							## new experiment
							scrollbox = {
								name = "character_military_officials_grid"
								parentanchor = top
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								blockoverride "scrollbox_margins" { }
		
								blockoverride "scrollbox_content"
								{
									spacing = 20
									margin = { 0 20 }

									## First row
									hbox = {
										spacing = 20

										## Domestikos
										button_standard = {
											layoutpolicy_horizontal = expanding
											size = { 450 160 }	
											background = {
												fittype = centercrop
												#texture = "gfx/interface/illustrations/decisions/z_ave_maria_roman_victory_arch.dds"
												texture = "gfx/interface/illustrations/event_scenes/z_ave_maria_porta_aurea.dds"
												
												modify_texture = {
													texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
													blend_mode = alphamultiply
												}
											}
											
											dynamicgridbox = {
												datamodel = "[GetPlayer.MakeScope.GetList('list_roman_administration_domestikos')]"
												datamodel_wrap = 7
												flipdirection = yes
												
												state = {
													name = get_list
													trigger_on_create = yes
													duration = 2
													# on_start = "[GetScriptedGui('am_institutions_roman_administration_get_domestikos_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													next = get_list
												}
	
												item = {
													portrait_shoulders = {
														datacontext = "[Scope.GetCharacter]"
	
														blockoverride "description_relation_text" {
															text = "[Character.GetPlayerGuestDescription]"
														}

														background = {
															using = Background_Area
														}
													}
												}
											}

											text_single = {
												margin_top = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "Domestikos of the East"
												using = Font_Size_Medium
												default_format = "#V"
											}

											textbox = {
												margin_top = 150
												margin_right = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "megas_domestikos_gui_text"
												using = Font_Size_Small
												#default_format = "#low"
											}

										}

										## Antioch
										button_standard = {
											layoutpolicy_horizontal = expanding
											size = { 450 160 }	
											background = {
												fittype = centercrop
												#texture = "gfx/interface/illustrations/decisions/z_ave_maria_roman_victory_arch.dds"
												texture = "gfx/interface/illustrations/event_scenes/z_ave_maria_muslim_palace.dds"
												
												modify_texture = {
													texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
													blend_mode = alphamultiply
												}
											}
											
											dynamicgridbox = {
												datamodel = "[GetPlayer.MakeScope.GetList('list_roman_administration_antioch')]"
												datamodel_wrap = 7
												flipdirection = yes
												
												state = {
													name = get_list
													trigger_on_create = yes
													duration = 2
													# on_start = "[GetScriptedGui('am_institutions_roman_administration_get_antioch_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													next = get_list
												}
	
												item = {
													portrait_shoulders = {
														datacontext = "[Scope.GetCharacter]"
	
														blockoverride "description_relation_text" {
															text = "[Character.GetPlayerGuestDescription]"
														}

														background = {
															using = Background_Area
														}
													}
												}
											}

											text_single = {
												margin_top = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "Doux of Antioch"
												using = Font_Size_Medium
												default_format = "#V"
											}

											textbox = {
												margin_top = 150
												margin_right = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "antioch_doukaton_gui_text"
												using = Font_Size_Small
												#default_format = "#low"
											}

										}
									}

									## Second row
									hbox = {
										spacing = 20

										## Anatolia
										button_standard = {
											layoutpolicy_horizontal = expanding
											size = { 450 160 }	
											background = {
												fittype = centercrop
												#texture = "gfx/interface/illustrations/decisions/z_ave_maria_roman_victory_arch.dds"
												texture = "gfx/interface/illustrations/event_scenes/steppe.dds"
												
												modify_texture = {
													texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
													blend_mode = alphamultiply
												}
											}
											
											dynamicgridbox = {
												datamodel = "[GetPlayer.MakeScope.GetList('list_roman_administration_anatolia')]"
												datamodel_wrap = 7
												flipdirection = yes
												
												state = {
													name = get_list
													trigger_on_create = yes
													duration = 2
													# on_start = "[GetScriptedGui('am_institutions_roman_administration_get_anatolia_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													next = get_list
												}
	
												item = {
													portrait_shoulders = {
														datacontext = "[Scope.GetCharacter]"
	
														blockoverride "description_relation_text" {
															text = "[Character.GetPlayerGuestDescription]"
														}

														background = {
															using = Background_Area
														}
													}
												}
											}

											text_single = {
												margin_top = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "Strategos of Anatolikon"
												using = Font_Size_Medium
												default_format = "#V"
											}

											textbox = {
												margin_top = 150
												margin_right = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "strategos_anatolia_gui_text"
												using = Font_Size_Small
												#default_format = "#low"
											}

										}

										## Exkoubitor
										button_standard = {
											layoutpolicy_horizontal = expanding
											size = { 450 160 }	
											background = {
												fittype = centercrop
												#texture = "gfx/interface/illustrations/decisions/z_ave_maria_roman_victory_arch.dds"
												texture = "gfx/interface/illustrations/event_scenes/z_ave_maria_constantinople_akkubita_dining_hall.dds"
												
												modify_texture = {
													texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
													blend_mode = alphamultiply
												}
											}
											
											dynamicgridbox = {
												datamodel = "[GetPlayer.MakeScope.GetList('list_roman_administration_excubitor')]"
												datamodel_wrap = 7
												flipdirection = yes
												
												state = {
													name = get_list
													trigger_on_create = yes
													duration = 2
													# on_start = "[GetScriptedGui('am_institutions_roman_administration_get_excubitor_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													next = get_list
												}
	
												item = {
													portrait_shoulders = {
														datacontext = "[Scope.GetCharacter]"
	
														blockoverride "description_relation_text" {
															text = "[Character.GetPlayerGuestDescription]"
														}

														background = {
															using = Background_Area
														}
													}
												}
											}

											text_single = {
												margin_top = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "Domestikos of the Exkoubitoi"
												using = Font_Size_Medium
												default_format = "#V"
											}

											textbox = {
												margin_top = 150
												margin_right = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "exkoubitor_gui_text"
												using = Font_Size_Small
												#default_format = "#low"
											}

										}

									}

									## third row
									hbox = {
										spacing = 20

										## Vigla
										button_standard = {
											layoutpolicy_horizontal = expanding
											size = { 450 160 }	
											background = {
												fittype = centercrop
												#texture = "gfx/interface/illustrations/decisions/z_ave_maria_roman_victory_arch.dds"
												texture = "gfx/interface/illustrations/event_scenes/z_ave_maria_constantine_forum_view.dds"
												
												modify_texture = {
													texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
													blend_mode = alphamultiply
												}
											}
											
											dynamicgridbox = {
												datamodel = "[GetPlayer.MakeScope.GetList('list_roman_administration_vigla')]"
												datamodel_wrap = 7
												flipdirection = yes
												
												state = {
													name = get_list
													trigger_on_create = yes
													duration = 2
													# on_start = "[GetScriptedGui('am_institutions_roman_administration_get_vigla_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													next = get_list
												}
	
												item = {
													portrait_shoulders = {
														datacontext = "[Scope.GetCharacter]"
	
														blockoverride "description_relation_text" {
															text = "[Character.GetPlayerGuestDescription]"
														}

														background = {
															using = Background_Area
														}
													}
												}
											}

											text_single = {
												margin_top = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "Domestikos of the Vigla"
												using = Font_Size_Medium
												default_format = "#V"
											}

											textbox = {
												margin_top = 150
												margin_right = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "vigla_gui_text"
												using = Font_Size_Small
												#default_format = "#low"
											}

										}

										## Droungarios
										button_standard = {
											layoutpolicy_horizontal = expanding
											size = { 450 160 }	
											background = {
												fittype = centercrop
												#texture = "gfx/interface/illustrations/decisions/z_ave_maria_roman_victory_arch.dds"
												texture = "gfx/interface/illustrations/character_view/ave_maria_roman_administration_droungarios_tou_stolou.dds"
												
												modify_texture = {
													texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
													blend_mode = alphamultiply
												}
											}
											
											dynamicgridbox = {
												datamodel = "[GetPlayer.MakeScope.GetList('list_roman_administration_droungarios')]"
												datamodel_wrap = 7
												flipdirection = yes
												
												state = {
													name = get_list
													trigger_on_create = yes
													duration = 2
													# on_start = "[GetScriptedGui('am_institutions_roman_administration_get_droungarios_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													next = get_list
												}
	
												item = {
													portrait_shoulders = {
														datacontext = "[Scope.GetCharacter]"
	
														blockoverride "description_relation_text" {
															text = "[Character.GetPlayerGuestDescription]"
														}

														background = {
															using = Background_Area
														}
													}
												}
											}

											text_single = {
												margin_top = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "Droungarios of the Fleet"
												using = Font_Size_Medium
												default_format = "#V"
											}

											textbox = {
												margin_top = 150
												margin_right = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "droungarios_gui_text"
												using = Font_Size_Small
												#default_format = "#low"
											}

										}
									}

									## fourth row
									hbox = {
										spacing = 20

										## Hikanatoi
										button_standard = {
											layoutpolicy_horizontal = expanding
											size = { 450 160 }	
											background = {
												fittype = centercrop
												#texture = "gfx/interface/illustrations/decisions/z_ave_maria_roman_victory_arch.dds"
												texture = "gfx/interface/illustrations/event_scenes/z_ave_maria_constantinople_great_palace_interior.dds"
												
												modify_texture = {
													texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
													blend_mode = alphamultiply
												}
											}
											
											dynamicgridbox = {
												datamodel = "[GetPlayer.MakeScope.GetList('list_roman_administration_hikanatoi')]"
												datamodel_wrap = 7
												flipdirection = yes
												
												state = {
													name = get_list
													trigger_on_create = yes
													duration = 2
													# on_start = "[GetScriptedGui('am_institutions_roman_administration_get_hikanatoi_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													next = get_list
												}
	
												item = {
													portrait_shoulders = {
														datacontext = "[Scope.GetCharacter]"
	
														blockoverride "description_relation_text" {
															text = "[Character.GetPlayerGuestDescription]"
														}

														background = {
															using = Background_Area
														}
													}
												}
											}

											text_single = {
												margin_top = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "Domestikos of the Hikanatoi"
												using = Font_Size_Medium
												default_format = "#V"
											}

											textbox = {
												margin_top = 150
												margin_right = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "hikanatoi_gui_text"
												using = Font_Size_Small
												#default_format = "#low"
											}

										}

										## Noumeroi
										button_standard = {
											layoutpolicy_horizontal = expanding
											size = { 450 160 }	
											background = {
												fittype = centercrop
												#texture = "gfx/interface/illustrations/decisions/z_ave_maria_roman_victory_arch.dds"
												texture = "gfx/interface/illustrations/event_scenes/z_ave_maria_daphne_palace_window.dds"
												
												modify_texture = {
													texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
													blend_mode = alphamultiply
												}
											}
											
											dynamicgridbox = {
												datamodel = "[GetPlayer.MakeScope.GetList('list_roman_administration_noumeroi')]"
												datamodel_wrap = 7
												flipdirection = yes
												
												state = {
													name = get_list
													trigger_on_create = yes
													duration = 2
													# on_start = "[GetScriptedGui('am_institutions_roman_administration_get_noumeroi_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													next = get_list
												}
	
												item = {
													portrait_shoulders = {
														datacontext = "[Scope.GetCharacter]"
	
														blockoverride "description_relation_text" {
															text = "[Character.GetPlayerGuestDescription]"
														}

														background = {
															using = Background_Area
														}
													}
												}
											}

											text_single = {
												margin_top = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "Domestikos of the Noumeroi"
												using = Font_Size_Medium
												default_format = "#V"
											}

											textbox = {
												margin_top = 150
												margin_right = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "noumeroi_gui_text"
												using = Font_Size_Small
												#default_format = "#low"
											}

										}

									}

									divider = {
										layoutpolicy_horizontal = expanding
									}

									hbox = {
										layoutpolicy_horizontal = expanding
										text_label_center = {
											text = "doukaton_gui_text"
											using = Font_Size_Medium
											default_format = "#high"								
										}
									}

									## Fifth row and beyond
									hbox = {
										dynamicgridbox = {
											datamodel = "[GetPlayer.MakeScope.GetList('list_roman_administration_doukaton_list')]"
											datamodel_wrap = 7
											flipdirection = yes
											
											state = {
												name = get_list
												trigger_on_create = yes
												duration = 2
												# on_start = "[GetScriptedGui('am_institutions_roman_administration_get_doukaton_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
												next = get_list
											}
	
											item = {
												portrait_shoulders = {
													datacontext = "[Scope.GetCharacter]"
	
													blockoverride "description_relation_text" {
														text = "[Character.GetPlayerGuestDescription]"
													}
	
													background = {
														using = Background_Area
													}
												}
												
											}
										}
									}									

									divider = {
										layoutpolicy_horizontal = expanding
									}

									hbox = {
										layoutpolicy_horizontal = expanding
										text_label_center = {
											text = "theme_gui_text"
											using = Font_Size_Medium
											default_format = "#high"								
										}
									}

									## 6th row and beyond
									hbox = {
										dynamicgridbox = {
											datamodel = "[GetPlayer.MakeScope.GetList('list_roman_administration_theme_list')]"
											datamodel_wrap = 7
											flipdirection = yes
											
											state = {
												name = get_list
												trigger_on_create = yes
												duration = 2
												# on_start = "[GetScriptedGui('am_institutions_roman_administration_get_theme_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
												next = get_list
											}
	
											item = {
												portrait_shoulders = {
													datacontext = "[Scope.GetCharacter]"
	
													blockoverride "description_relation_text" {
														text = "[Character.GetPlayerGuestDescription]"
													}
	
													background = {
														using = Background_Area
													}
												}
												
											}
										}
									}
									
								}
							}

							#Make a difference east / west ?
							hbox = {
								vbox = {
									
								}
							}

							divider = {

							}

							hbox = {
								vbox = {
									
								}
							}
						}
					}					
				}
			
			}

			## Divider for visuals
			divider = {
				layoutpolicy_horizontal = expanding
			}

			## Footer area
			hbox = {
				name = "footer_army"
				layoutpolicy_horizontal = expanding
				
				# background = {
				# 	texture = "gfx/interface/component_tiles/tile_window_background.dds"
				# 	spriteType = Corneredtiled
				# 	spriteborder = { 40 8 }
				# 	margin = { 10 0 }
				# 	margin_right = 25
				# 	texture_density = 2

				# 	modify_texture = {
				# 		name = "mask"
				# 		texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
				# 		blend_mode = alphamultiply
				# 	}

				# 	alpha = 0.9
				# }
			}
		}
	}

	### AVE MARIA - ROMAN Administration WINDOW
	window = {
		name = "administration_window"
		parentanchor = center
		size = { 1000 950 }
		position = { -150 0 }
		layer = windows_layer
		
		visible = "[GetVariableSystem.Exists( 'am_institutions_administration_gui_toggle' )]"

		using = Window_Background
		using = Window_Decoration

		## Main box
		vbox = {
			using = Window_Margins
			
			## Header
			header_pattern = {
				layoutpolicy_horizontal = expanding
				blockoverride "header_text"
				{
					text = "[Localize('roman_administration_administration_tab_header')]"
				}
				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Clear('am_institutions_administration_gui_toggle')]"
				}
			}

			## Main Box where army things are
			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				
				widget = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					## Main box
					vbox = {
						spacing = 10

						## High military official list box
						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							spacing = 10

							background = {
								#texture = "gfx/interface/illustrations/event_scenes/z_ave_maria_constantinople_akkubita_dining_hall.dds"
								fittype = centercrop
								alpha = 0.8

								using = Mask_Rough_Edges
							}

							hbox = {
								layoutpolicy_horizontal = expanding
								text_label_center = {
									text = "Administrative Offices"
									using = Font_Size_Medium
									default_format = "#high"								
								}
							}

							## Line to visually divide stuff
							divider = {
								layoutpolicy_horizontal = expanding
							}

							## new experiment
							scrollbox = {
								name = "character_administrative_officials_grid"
								parentanchor = top
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								blockoverride "scrollbox_margins" { }
		
								blockoverride "scrollbox_content"
								{
									spacing = 20
									margin = { 0 20 }

									## First row
									hbox = {
										spacing = 20

										## logothetes
										button_standard = {
											layoutpolicy_horizontal = expanding
											size = { 450 160 }	
											background = {
												fittype = centercrop
												#texture = "gfx/interface/illustrations/decisions/z_ave_maria_roman_victory_arch.dds"
												texture = "gfx/interface/illustrations/event_scenes/z_ave_maria_roman_palace_interior.dds"
												
												modify_texture = {
													texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
													blend_mode = alphamultiply
												}
											}
											
											dynamicgridbox = {
												datamodel = "[GetPlayer.MakeScope.GetList('list_roman_administration_logothetetes')]"
												datamodel_wrap = 7
												flipdirection = yes
												
												state = {
													name = get_list
													trigger_on_create = yes
													duration = 2
													# on_start = "[GetScriptedGui('am_institutions_roman_administration_get_logothetetes_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													next = get_list
												}
	
												item = {
													portrait_shoulders = {
														datacontext = "[Scope.GetCharacter]"
	
														blockoverride "description_relation_text" {
															text = "[Character.GetPlayerGuestDescription]"
														}

														background = {
															using = Background_Area
														}
													}
												}
											}

											text_single = {
												margin_top = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "Logothetes of the Drome"
												using = Font_Size_Medium
												default_format = "#V"
											}

											textbox = {
												margin_top = 150
												margin_right = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "logothetes_gui_text"
												using = Font_Size_Small
												#default_format = "#low"
											}

										}

										## Sakellarios
										button_standard = {
											layoutpolicy_horizontal = expanding
											size = { 450 160 }	
											background = {
												fittype = centercrop
												#texture = "gfx/interface/illustrations/decisions/z_ave_maria_roman_victory_arch.dds"
												texture = "gfx/interface/illustrations/event_scenes/councilchamber.dds"
												
												modify_texture = {
													texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
													blend_mode = alphamultiply
												}
											}
											
											dynamicgridbox = {
												datamodel = "[GetPlayer.MakeScope.GetList('list_roman_administration_sakellion')]"
												datamodel_wrap = 7
												flipdirection = yes
												
												state = {
													name = get_list
													trigger_on_create = yes
													duration = 2
													# on_start = "[GetScriptedGui('am_institutions_roman_administration_get_sakellion_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													next = get_list
												}
	
												item = {
													portrait_shoulders = {
														datacontext = "[Scope.GetCharacter]"
	
														blockoverride "description_relation_text" {
															text = "[Character.GetPlayerGuestDescription]"
														}

														background = {
															using = Background_Area
														}
													}
												}
											}

											text_single = {
												margin_top = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "Chartoularios of the Sakellion"
												using = Font_Size_Medium
												default_format = "#V"
											}

											textbox = {
												margin_top = 150
												margin_right = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "sakellarios_gui_text"
												using = Font_Size_Small
												#default_format = "#low"
											}

										}
									}

									## Second row
									hbox = {
										spacing = 20

										## Quaestor
										button_standard = {
											layoutpolicy_horizontal = expanding
											size = { 450 160 }	
											background = {
												fittype = centercrop
												#texture = "gfx/interface/illustrations/decisions/z_ave_maria_roman_victory_arch.dds"
												texture = "gfx/interface/illustrations/event_scenes/gallows.dds"
												
												modify_texture = {
													texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
													blend_mode = alphamultiply
												}
											}
											
											dynamicgridbox = {
												datamodel = "[GetPlayer.MakeScope.GetList('list_roman_administration_quaestor')]"
												datamodel_wrap = 7
												flipdirection = yes
												
												state = {
													name = get_list
													trigger_on_create = yes
													duration = 2
													# on_start = "[GetScriptedGui('am_institutions_roman_administration_get_quaestor_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													next = get_list
												}
	
												item = {
													portrait_shoulders = {
														datacontext = "[Scope.GetCharacter]"
	
														blockoverride "description_relation_text" {
															text = "[Character.GetPlayerGuestDescription]"
														}

														background = {
															using = Background_Area
														}
													}
												}
											}

											text_single = {
												margin_top = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "Quaestor"
												using = Font_Size_Medium
												default_format = "#V"
											}

											textbox = {
												margin_top = 150
												margin_right = 10
												margin_left = 145
												layoutpolicy_horizontal = expanding
												text = "quaestor_gui_text"
												using = Font_Size_Small
												#default_format = "#low"
											}

										}

										button = {
											size = { 450 160 }	
										}
									}

									divider = {
										layoutpolicy_horizontal = expanding
									}

									hbox = {
										layoutpolicy_horizontal = expanding
										text_label_center = {
											text = "kouratoreia_gui_text"
											using = Font_Size_Medium
											default_format = "#high"								
										}
									}								

									

									## 6th row and beyond
									hbox = {
										dynamicgridbox = {
											datamodel = "[GetPlayer.MakeScope.GetList('list_roman_administration_administrative_officials_minus_high_officials')]"
											datamodel_wrap = 7
											flipdirection = yes
											
											state = {
												name = get_list
												trigger_on_create = yes
												duration = 2
												# on_start = "[GetScriptedGui('am_institutions_roman_administration_get_administrative_officials_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
												next = get_list
											}
	
											item = {
												portrait_shoulders = {
													datacontext = "[Scope.GetCharacter]"
	
													blockoverride "description_relation_text" {
														text = "[Character.GetPlayerGuestDescription]"
													}
	
													background = {
														using = Background_Area
													}
												}
												
											}
										}
									}

									# divider = {
									# 	layoutpolicy_horizontal = expanding
									# }

									## Minor title experiment
									# hbox = {
									# 	margin = { 10 0 }
									# 	layoutpolicy_horizontal = expanding
									# 	vbox = {
									# 		layoutpolicy_horizontal = expanding
									# 		spacing = 5
											
									# 		datacontext = "[GetPlayer.GetRelationOfType( GetRelation( 'junior_emperor' ) )]"											
						
									# 		hbox = {
									# 			layoutpolicy_horizontal = expanding
						
									# 			background = {
									# 				texture = "gfx/interface/illustrations/event_scenes/z_ave_maria_constantinople_great_palace_interior.dds"
									# 				fittype = centercrop
									# 				alpha = 0.5
						
									# 				using = Mask_Rough_Edges
									# 			}
						
									# 			portrait_shoulders = {
									# 				background = {
									# 					using = Background_Area
									# 				}
									# 				blockoverride "onclick" {
									# 					#datacontext = "[GetDecisionWithKey( 'hire_physician_decision' )]"
									# 					#onclick = "[OpenDecisionDetailView( Decision.Self )]"
						
									# 					button_icon = {
									# 						parentanchor = center
									# 						alwaystransparent = yes
									# 						size = { 40 40 }
									# 						position = {-5 -5}
									# 						texture = "gfx/interface/icons/flat_icons/plus.dds" 
									# 					}
									# 				}
									# 			}
						
									# 			vbox = {
									# 				layoutpolicy_horizontal = expanding
						
									# 				text_single = {
									# 					layoutpolicy_horizontal = expanding
									# 					text = "Symbaleus"
									# 				}
						
									# 				text_single = {
									# 					layoutpolicy_horizontal = expanding
									# 					visible = "[Character.IsValid]"
									# 					text = "[Character.GetFullName]"
									# 					autoresize = no
									# 				}
						
									# 				hbox = {
									# 					layoutpolicy_horizontal = expanding
									# 					margin = { 0 10 }
						
									# 					# button_court = {
									# 					# 	name = "hire_physician_decision"
									# 					# 	#datacontext = "[GetDecisionWithKey( 'hire_physician_decision' )]"
									# 					# 	visible = "[And( Not( Character.IsValid ), Decision.IsShownForPlayer )]"
									# 					# 	onclick = "[OpenDecisionDetailView( Decision.Self )]"
						
									# 					# 	size = { 250 40 }
															
									# 					# 	blockoverride "size_illustration" {
									# 					# 		size = { 250 38 }
									# 					# 	}
															
									# 					# 	blockoverride "deb_illustration" {
									# 					# 		visible = no
									# 					# 	}
									# 					# }
						
									# 					expand = {}
									# 				}
									# 			}
									# 		}
						
									# 	}
									# }
									
								}
							}

							#Make a difference east / west ?
							hbox = {
								vbox = {
									
								}
							}

							divider = {

							}

							
						}
					}					
				}
			
			}

			## Divider for visuals
			divider = {
				layoutpolicy_horizontal = expanding
			}

			## Footer area
			hbox = {
				name = "footer_army"
				layoutpolicy_horizontal = expanding
				
				# vbox = {
				# 	layoutpolicy_horizontal = expanding
				# 	spacing = 5
					
				# 	datacontext = "[GetPlayer.GetRelationOfType( GetRelation( 'junior_emperor' ) )]"

					

				# 	hbox = {
				# 		layoutpolicy_horizontal = expanding

				# 		background = {
				# 			texture = "gfx/interface/illustrations/event_scenes/z_ave_maria_constantinople_great_palace_interior.dds"
				# 			fittype = centercrop
				# 			alpha = 0.5

				# 			using = Mask_Rough_Edges
				# 		}

				# 		portrait_shoulders = {
				# 			background = {
				# 				using = Background_Area
				# 			}
				# 			blockoverride "onclick" {
				# 				#datacontext = "[GetDecisionWithKey( 'hire_physician_decision' )]"
				# 				#onclick = "[OpenDecisionDetailView( Decision.Self )]"

				# 				button_icon = {
				# 					parentanchor = center
				# 					alwaystransparent = yes
				# 					size = { 40 40 }
				# 					position = {-5 -5}
				# 					texture = "gfx/interface/icons/flat_icons/plus.dds" 
				# 				}
				# 			}
				# 		}

				# 		vbox = {
				# 			layoutpolicy_horizontal = expanding

				# 			text_single = {
				# 				layoutpolicy_horizontal = expanding
				# 				text = "Symbaleus"
				# 			}

				# 			text_single = {
				# 				layoutpolicy_horizontal = expanding
				# 				visible = "[Character.IsValid]"
				# 				text = "[Character.GetFullName]"
				# 				autoresize = no
				# 			}

				# 			hbox = {
				# 				layoutpolicy_horizontal = expanding
				# 				margin = { 0 10 }

				# 				# button_court = {
				# 				# 	name = "hire_physician_decision"
				# 				# 	#datacontext = "[GetDecisionWithKey( 'hire_physician_decision' )]"
				# 				# 	visible = "[And( Not( Character.IsValid ), Decision.IsShownForPlayer )]"
				# 				# 	onclick = "[OpenDecisionDetailView( Decision.Self )]"

				# 				# 	size = { 250 40 }
									
				# 				# 	blockoverride "size_illustration" {
				# 				# 		size = { 250 38 }
				# 				# 	}
									
				# 				# 	blockoverride "deb_illustration" {
				# 				# 		visible = no
				# 				# 	}
				# 				# }

				# 				expand = {}
				# 			}
				# 		}
				# 	}

				# }
			}
		}
	}

	### AVE MARIA - Fatimid Army Factions WINDOW
	window = {
		name = "fatimid_army_factions_window"
		parentanchor = center
		size = { 1000 700 }
		position = { -150 0 }
		layer = windows_layer
		
		visible = "[GetVariableSystem.Exists( 'am_institutions_fatimid_army_factions_gui_toggle' )]"

		using = Window_Background
		using = Window_Decoration

		## Main box
		vbox = {
			using = Window_Margins
			
			## Header
			header_pattern = {
				layoutpolicy_horizontal = expanding
				blockoverride "header_text"
				{
					text = "fatimid_army_factions_tab_header"
				}
				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
				}
			}

			# icon = {
			# 	texture = "gfx/interface/icons/institutions/islamic_ui_round_ornament.dds"
			# 	alpha = 0.9
			# }
			# icon = {
			# 	#parentanchor = hcenter
			# 	size = { 920 25 }
			# 	#position = { 0 5 }

			# 	texture = "gfx/interface/icons/institutions/islamic_ui_horizontal.dds"
			# 	spriteType = Corneredtiled
			# 	spriteborder = { 25 0 }
			# 	#mirror = vertical
			# 	texture_density = 1

			# }
			# background = {
			# 	texture = "gfx/interface/icons/institutions/islamic_background_fill.dds"
			# 	fittype = centercrop
			# 	alpha = 0.2

			# 	using = Mask_Rough_Edges
			# }

			## Army Realm Ascendency Bar
			hbox = {
				name = "army_ascendency"
				layoutpolicy_horizontal = expanding
				spacing = 1

				margin = { 10 10 }

				background = {
					using = Background_Area_Dark
				}
				spacer = {
					size = { 6 6 }
				}

				icon = {
					texture = "gfx/interface/icons/ascendency.dds"
					size = { 35 35 }
				}

				text_single = {
					align = left
					text = "[ascendency|E]: "
					using = Font_Size_Medium
					default_format = "#bold"
				}

				text_single = {
					#align = left
					text = "[GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_army').GetValue)|0]"
					using = Font_Size_Medium
					#default_format = "#bold"
					tooltip = "ascendency_army_monthly_positive"
				}
				
				## Ascendency Box
				vbox = {

					widget = {
						name = "islamic_empire_ascendency_army"
						size = { 300 30 }	
	
						background = {
							using = Background_Area
							margin = { 3 2 }
						}

						hbox = {
							visible = "[LessThanOrEqualTo_CFixedPoint(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_army').GetValue,'(CFixedPoint)50')]"
							progressbar_green = {
								# size = 7500
								minimumsize = { 75 30 }
								min = 0
								max = 2500
								value = "[FixedPointToProgressbarValue(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_army').GetValue)]"
							}
							progressbar_green = {
								# size = 7500
								minimumsize = { 75 30 }
								min = 2500
								max = 5000
								value = "[FixedPointToProgressbarValue(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_army').GetValue)]"
							}
							progressbar_green = {
								# size = 7500
								minimumsize = { 75 30 }
								min = 5000
								max = 7500
								value = "[FixedPointToProgressbarValue(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_army').GetValue)]"
							}
							progressbar_green = {
								# size = 7500
								minimumsize = { 75 30 }
								min = 7500
								max = 10000
								value = "[FixedPointToProgressbarValue(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_army').GetValue)]"
							}
						}
						hbox = {
							visible = "[GreaterThan_CFixedPoint(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_army').GetValue,'(CFixedPoint)50')]"
							progressbar_red = {
								# size = 7500
								minimumsize = { 75 30 }
								min = 0
								max = 2500
								value = "[FixedPointToProgressbarValue(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_army').GetValue)]"
							}
							progressbar_red = {
								# size = 7500
								minimumsize = { 75 30 }
								min = 2500
								max = 5000
								value = "[FixedPointToProgressbarValue(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_army').GetValue)]"
							}
							progressbar_red = {
								# size = 7500
								minimumsize = { 75 30 }
								min = 5000
								max = 7500
								value = "[FixedPointToProgressbarValue(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_army').GetValue)]"
							}
							progressbar_red = {
								# size = 7500
								minimumsize = { 75 30 }
								min = 7500
								max = 10000
								value = "[FixedPointToProgressbarValue(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_army').GetValue)]"
							}
						}
						## text
						hbox = {
							text_single = {
								# margin = { 10 5 }
								align = center
								layoutpolicy_horizontal = expanding
								text = "Absent"
								autoresize = no
								tooltip = "islamic_empire_faction_ascendency_minimal_army_tooltip"
							}
							text_single = {
								align = center
								layoutpolicy_horizontal = expanding
								text = "Low"
								autoresize = no
								tooltip = "islamic_empire_faction_ascendency_low_army_tooltip"
							}
							text_single = {
								align = center
								layoutpolicy_horizontal = expanding
								text = "Normal"
								autoresize = no
								tooltip = "islamic_empire_faction_ascendency_normal_army_tooltip"
							}
							text_single = {
								align = center
								layoutpolicy_horizontal = expanding
								text = "High"
								autoresize = no
								tooltip = "islamic_empire_faction_ascendency_high_army_tooltip"
							}
						}
					}

					divider = {}

				}

				spacer = {
					size = { 6 6 }
				}
				spacer = {
					size = { 6 6 }
				}
				spacer = {
					size = { 6 6 }
				}
				spacer = {
					size = { 6 6 }
				}
				spacer = {
					size = { 6 6 }
				}
				spacer = {
					size = { 6 6 }
				}
				spacer = {
					size = { 6 6 }
				}
				spacer = {
					size = { 6 6 }
				}
				spacer = {
					size = { 6 6 }
				}
				
			}

			spacer = {
				size = { 6 6 }
			}

			## Main Box where army things are
			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				##gfx tests
				background = {
					texture = "gfx/interface/icons/institutions/islamic_background_fill.dds"
					fittype = centercrop
					alpha = 0.2
	
					using = Mask_Rough_Edges
				}
				
				widget = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					vbox = {
						spacing = 10

						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							spacing = 10

							background = {
								#texture = "gfx/interface/illustrations/event_scenes/z_ave_maria_constantinople_akkubita_dining_hall.dds"
								fittype = centercrop
								alpha = 0.8

								using = Mask_Rough_Edges
							}

							## new experiment
							scrollbox = {
								name = "character_military_officials_grid"
								parentanchor = top
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								blockoverride "scrollbox_margins" { }

								blockoverride "scrollbox_content"
								{
									spacing = 20
									margin = { 0 20 }

									dynamicgridbox = {
										datamodel = "[GetPlayer.MakeScope.GetList('list_fatimid_army_leaders')]"
										datamodel_wrap = 1
										flipdirection = yes
										
										state = {
											name = get_list
											trigger_on_create = yes
											duration = 2
											on_start = "[GetScriptedGui('am_institutions_islamic_empire_fatimid_get_army_leaders').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											next = get_list
										}

										item = {
											## Gros bouton
											button_standard = {
												layoutpolicy_horizontal = expanding
												size = { 850 220 }	
												margin = { 10 10 }

												background = {
													fittype = centercrop
													#texture = "gfx/interface/illustrations/decisions/z_ave_maria_roman_victory_arch.dds"
													texture = "gfx/interface/illustrations/decisions/z_ave_maria_muslim_courtyard_cleaned.dds"
													
													modify_texture = {
														texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
														blend_mode = alphamultiply
													}
												}

												## Boite principale horizontale ou tout est mis
												hbox = {
													#layoutpolicy_horizontal = expanding
													layoutpolicy_vertical = expanding

													## Boite verticale gauche, portrait
													vbox = {
														layoutpolicy_vertical = expanding
														parentanchor = top|left
														portrait_shoulders = {
															datacontext = "[Scope.GetCharacter]"
			
															blockoverride "description_relation_text" {
																text = "[Character.GetPlayerGuestDescription]"
															}
			
															background = {
																using = Background_Area
															}
														}

														# spacer = {
														# 	size = { 0 40 }
														# }
													}

													## Boite verticale - Titre/nom du régiment et Infos/boutons chacun ans leur boites horizontales
													vbox = {
														layoutpolicy_vertical = expanding
														parentanchor = top

														## Titre/nom du régiment
														hbox = {

															
															text_single = {
																parentanchor = top|left
																datacontext = "[Scope.GetCharacter]"
																text = "[Character.GetPrimaryTitle.GetBaseNameNoTier]"
																using = Font_Size_Medium
																default_format = "#bold"

																margin = { 10 10 }
																background = {
																	using = Background_Area_Dark
																}
												
																background = {
																	visible = "[ObjectsEqual( Character.Self, GetPlayer )]"
																	texture = "gfx/interface/component_masks/patterns/mask_pattern_02.dds"
																	spriteType = Corneredtiled
																	alpha = 0.4
												
																	#using = Color_Blue
												
																	modify_texture = {
																		texture = "gfx/interface/component_masks/mask_fade_horizontal_right.dds"
																		blend_mode = alphamultiply
																		alpha = 0.9
																	}
												
																	modify_texture = {
																		texture = "gfx/interface/component_masks/mask_texture_01.dds"
																		spriteType = Corneredtiled
																		spriteborder = { 15 15 }
																		blend_mode = alphamultiply
																	}
																}
																
															}

															# spacer = {
															# 	size = { 600 0 }
															# }
											
													

														}														
														
														## Infos
														hbox = {
															spacing = 25

															

															## Text info : Salary, honors
															vbox = {
																#align = left
																layoutpolicy_vertical = expanding

																text_single = {
																	layoutpolicy_horizontal = expanding
																	size = { 0 33 }
																	parentanchor = left
																	align = left
																	using = Font_Size_Medium
																	#default_format = "#positive_value;bold"
																	datacontext = "[Scope.GetCharacter]"
																	text = "[Localize('salary_regiment')]: [Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_regiment_salary').GetValue|1] [gold_i]"
																}
																
																text_single = {
																	layoutpolicy_horizontal = expanding
																	size = { 0 33 }
																	parentanchor = left
																	align = left
																	using = Font_Size_Medium
																	#default_format = "#positive_value;bold"
																	datacontext = "[Scope.GetCharacter]"
																	text = "[Localize('total_cost_regiment')]: [Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_regiment_salary_cost').GetValue|1] [gold_i]"
																}
																expand = {}
																expand = {}
																expand = {}
																text_single = {
																	layoutpolicy_horizontal = expanding
																	size = { 0 33 }
																	parentanchor = left
																	align = left
																	using = Font_Size_Medium
																	#default_format = "#positive_value;bold"
																	datacontext = "[Scope.GetCharacter]"
																	text = "[Localize('honors_regiment')]: [Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_regiment_honors').GetValue|0] @honors_icon"
																}
																expand = {}
															}
															## Buttons to increase salary / honors
															vbox = {
																layoutpolicy_vertical = expanding
																

																## Regiment Salary
																hbox = {
																	#align = left
																	button_standard = {
																		parentanchor = top|right
																		text = "Increase Salary"
																		size = { 150 32 }
																		tooltip = "increase_regiment_salary_tt"
																		datacontext = "[Scope.GetCharacter]"																		
																		onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
																		onclick = "[GetVariableSystem.Clear('am_institutions_gui_toggle')]"
																		onclick = "[GetScriptedGui('am_institutions_islamic_empire_fatimid_faction_increase_salary').Execute(GuiScope.SetRoot(Scope.GetCharacter.MakeScope).End)]"
																		
																		datacontext = "[GetScriptedGui('am_institutions_islamic_empire_can_click_fatimid_army_factions_buttons')]"
																		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
																	}
																}
																hbox = {
																	#align = left
																	button_standard = {
																		parentanchor = top|right
																		text = "Decrease Salary"
																		size = { 150 32 }
																		tooltip = "decrease_regiment_salary_tt"
																		#datacontext = "[ROOT.MakeScope.Scope.GetCharacter]"
																		onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
																		onclick = "[GetVariableSystem.Clear('am_institutions_gui_toggle')]"
																		onclick = "[GetScriptedGui('am_institutions_islamic_empire_fatimid_faction_decrease_salary').Execute(GuiScope.SetRoot(Scope.GetCharacter.MakeScope).End)]"
																		
																		datacontext = "[GetScriptedGui('am_institutions_islamic_empire_can_click_fatimid_army_factions_buttons')]"
																		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
																	}
																}

																## Regiment Honors manage buttons
																hbox = {
																	#align = left
																	button_standard = {
																		parentanchor = top|right
																		text = "Favour"
																		size = { 150 32 }
																		tooltip = "increase_regiment_honors_tt"
																		datacontext = "[Scope.GetCharacter]"
																		onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
																		onclick = "[GetVariableSystem.Clear('am_institutions_gui_toggle')]"
																		onclick = "[GetScriptedGui('am_institutions_islamic_empire_fatimid_faction_bestow_honors').Execute(GuiScope.SetRoot(Scope.GetCharacter.MakeScope).End)]"

																		datacontext = "[GetScriptedGui('am_institutions_islamic_empire_can_click_fatimid_army_factions_buttons')]"
																		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
																	}
																}
																
															}

															## Regiment comp INFO
															vbox = {
																#align = left
																layoutpolicy_vertical = expanding
																text_single = {
																	layoutpolicy_horizontal = expanding
																	size = { 0 33 }
																	parentanchor = left
																	align = left
																	using = Font_Size_Medium
																	#default_format = "#positive_value;bold"
																	datacontext = "[Scope.GetCharacter]"
																	text = "[Localize('type_regiment_1')]: [Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_regiment_size_infantry_display').GetValue|0]"
																}

																text_single = {
																	layoutpolicy_horizontal = expanding
																	size = { 0 33 }
																	parentanchor = left
																	align = left
																	using = Font_Size_Medium
																	#default_format = "#positive_value;bold"
																	datacontext = "[Scope.GetCharacter]"
																	text = "[Localize('type_regiment_2')]: [Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_regiment_size_light_cavalry_display').GetValue|0]"
																}

																text_single = {
																	layoutpolicy_horizontal = expanding
																	size = { 0 33 }
																	parentanchor = left
																	align = left
																	using = Font_Size_Medium
																	#default_format = "#positive_value;bold"
																	datacontext = "[Scope.GetCharacter]"
																	text = "[Localize('type_regiment_3')]: [Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_regiment_size_heavy_cavalry_display').GetValue|0]"
																}
															}
															## Buttons increase regiment size
															vbox = {
																layoutpolicy_vertical = expanding
																## Regiment Size
																hbox = {
																	# align = left
																	button_standard = {
																		parentanchor = top|left
																		text = "Recruit"
																		size = { 75 32 }
																		tooltip = "increase_infantry_size_tt"
																		datacontext = "[Scope.GetCharacter]"
																		#onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
																		#onclick = "[GetVariableSystem.Clear('am_institutions_gui_toggle')]"
																		onclick = "[GetScriptedGui('am_institutions_islamic_empire_fatimid_faction_increase_infantry').Execute(GuiScope.SetRoot(Scope.GetCharacter.MakeScope).End)]"

																		datacontext = "[GetScriptedGui('am_institutions_islamic_empire_can_click_fatimid_army_factions_buttons')]"
																		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
																	}
																	
																	button_standard = {
																		text = "Fire"
																		size = { 75 32 }
																		tooltip = "decrease_infantry_size_tt"
																		datacontext = "[Scope.GetCharacter]"
																		#onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
																		#onclick = "[GetVariableSystem.Clear('am_institutions_gui_toggle')]"
																		onclick = "[GetScriptedGui('am_institutions_islamic_empire_fatimid_faction_decrease_infantry').Execute(GuiScope.SetRoot(Scope.GetCharacter.MakeScope).End)]"

																		datacontext = "[GetScriptedGui('am_institutions_islamic_empire_can_click_fatimid_army_factions_buttons')]"
																		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
																	}
																}
																hbox = {
																	#align = left
																	button_standard = {
																		parentanchor = top|left
																		text = "Recruit"
																		size = { 75 32 }
																		tooltip = "increase_light_cavalry_size_tt"
																		#datacontext = "[ROOT.MakeScope.Scope.GetCharacter]"
																		#onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
																		#onclick = "[GetVariableSystem.Clear('am_institutions_gui_toggle')]"
																		onclick = "[GetScriptedGui('am_institutions_islamic_empire_fatimid_faction_increase_light_cavalry').Execute(GuiScope.SetRoot(Scope.GetCharacter.MakeScope).End)]"

																		datacontext = "[GetScriptedGui('am_institutions_islamic_empire_can_click_fatimid_army_factions_buttons')]"
																		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
																	}
																	button_standard = {
																		text = "Fire"
																		size = { 75 32 }
																		tooltip = "decrease_light_cavalry_size_tt"
																		#datacontext = "[ROOT.MakeScope.Scope.GetCharacter]"
																		#onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
																		#onclick = "[GetVariableSystem.Clear('am_institutions_gui_toggle')]"
																		onclick = "[GetScriptedGui('am_institutions_islamic_empire_fatimid_faction_decrease_light_cavalry').Execute(GuiScope.SetRoot(Scope.GetCharacter.MakeScope).End)]"

																		datacontext = "[GetScriptedGui('am_institutions_islamic_empire_can_click_fatimid_army_factions_buttons')]"
																		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
																	}
																}
																hbox = {
																	#align = left
																	button_standard = {
																		parentanchor = top|left
																		text = "Recruit"
																		size = { 75 32 }
																		tooltip = "increase_heavy_cavalry_size_tt"
																		#datacontext = "[ROOT.MakeScope.Scope.GetCharacter]"
																		#onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
																		#onclick = "[GetVariableSystem.Clear('am_institutions_gui_toggle')]"
																		onclick = "[GetScriptedGui('am_institutions_islamic_empire_fatimid_faction_increase_heavy_cavalry').Execute(GuiScope.SetRoot(Scope.GetCharacter.MakeScope).End)]"

																		datacontext = "[GetScriptedGui('am_institutions_islamic_empire_can_click_fatimid_army_factions_buttons')]"
																		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
																	}
																	button_standard = {
																		text = "Fire"
																		size = { 75 32 }
																		tooltip = "decrease_heavy_cavalry_size_tt"
																		#datacontext = "[ROOT.MakeScope.Scope.GetCharacter]"
																		#onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
																		#onclick = "[GetVariableSystem.Clear('am_institutions_gui_toggle')]"
																		onclick = "[GetScriptedGui('am_institutions_islamic_empire_fatimid_faction_decrease_heavy_cavalry').Execute(GuiScope.SetRoot(Scope.GetCharacter.MakeScope).End)]"

																		datacontext = "[GetScriptedGui('am_institutions_islamic_empire_can_click_fatimid_army_factions_buttons')]"
																		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
																	}
																}
															}
														}

														## Influence
														hbox = {
															datacontext = "[Scope.GetCharacter]"
															max_width = 460
															name = "army_faction_influence"
															layoutpolicy_horizontal = expanding
															#spacing = { 0 10 }
															margin = { 10 10 }	
															#margin_right = 370			

															icon = {
																texture = "gfx/interface/icons/influence.dds"
																#parentanchor = center
																size = { 35 35 }
																
															}
											
															text_single = {
																align = left
																text = "[influence|E]: "
																using = Font_Size_Medium
																#default_format = "#bold"
															}

															spacer = {
																size = { 6 6 }
															}

															text_single = {

																#align = left
																text = "[Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)|0]"
																using = Font_Size_Medium
																#default_format = "#bold"
																tooltip = "influence_monthly_positive"
																
															}

															spacer = {
																size = { 6 6 }
															}
															spacer = {
																size = { 6 6 }
															}
															
															vbox = {
											
																widget = {
																	datacontext = "[Scope.GetCharacter]"
																	name = "islamic_empire_influence_army_individual"
																	size = { 300 30 }	
												
																	background = {
																		using = Background_Area
																	}
											
																	hbox = {
																		visible = "[LessThanOrEqualTo_CFixedPoint(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue,'(CFixedPoint)50')]"
																		progressbar_green = {
																			# size = 7500
																			minimumsize = { 75 30 }
																			min = 0
																			max = 2500
																			value = "[FixedPointToProgressbarValue(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)]"
																		}
																		progressbar_green = {
																			# size = 7500
																			minimumsize = { 75 30 }
																			min = 2500
																			max = 5000
																			value = "[FixedPointToProgressbarValue(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)]"
																		}
																		progressbar_green = {
																			# size = 7500
																			minimumsize = { 75 30 }
																			min = 5000
																			max = 7500
																			value = "[FixedPointToProgressbarValue(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)]"
																		}
																		progressbar_green = {
																			# size = 7500
																			minimumsize = { 75 30 }
																			min = 7500
																			max = 10000
																			value = "[FixedPointToProgressbarValue(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)]"
																		}
																	}
																	hbox = {
																		visible = "[GreaterThan_CFixedPoint(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue,'(CFixedPoint)50')]"
																		progressbar_red = {
																			# size = 7500
																			minimumsize = { 75 30 }
																			min = 0
																			max = 2500
																			value = "[FixedPointToProgressbarValue(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)]"
																		}
																		progressbar_red = {
																			# size = 7500
																			minimumsize = { 75 30 }
																			min = 2500
																			max = 5000
																			value = "[FixedPointToProgressbarValue(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)]"
																		}
																		progressbar_red = {
																			# size = 7500
																			minimumsize = { 75 30 }
																			min = 5000
																			max = 7500
																			value = "[FixedPointToProgressbarValue(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)]"
																		}
																		progressbar_red = {
																			# size = 7500
																			minimumsize = { 75 30 }
																			min = 7500
																			max = 10000
																			value = "[FixedPointToProgressbarValue(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)]"
																		}
																	}
																	
																	## text
																	hbox = {
																		text_single = {
																			# margin = { 10 5 }
																			align = center
																			layoutpolicy_horizontal = expanding
																			text = "Minimal"
																			autoresize = no
																			tooltip = "faction_influence_minimal_tooltip"
																		}
																		text_single = {
																			align = center
																			layoutpolicy_horizontal = expanding
																			text = "Low"
																			autoresize = no
																			tooltip = "faction_influence_low_tooltip"
																		}
																		text_single = {
																			align = center
																			layoutpolicy_horizontal = expanding
																			text = "Normal"
																			autoresize = no
																			tooltip = "faction_influence_normal_tooltip"
																		}
																		text_single = {
																			align = center
																			layoutpolicy_horizontal = expanding
																			text = "High"
																			autoresize = no
																			tooltip = "faction_influence_high_tooltip"
																		}
																	}
																}
											
																divider = {}	
																
																
											
															}		
															
															spacer = {
																size = { 6 6 }
															}
															spacer = {
																size = { 6 6 }
															}
																										
															#expand = {}
														}
														
														
													}	
													
												}

											}
											
										}
									}						
									
								}
							}
						}
					}
					
										
				}
			
			}

			## Divider for visuals
			divider = {
				layoutpolicy_horizontal = expanding
			}

			## Footer area
			hbox = {
				name = "footer_army"
				layoutpolicy_horizontal = expanding
				
				vbox = {
					layoutpolicy_horizontal = expanding
					text_single = {
						text = "   "
					}
					expand = {}
				}	
			}
		}
	}

	### AVE MARIA - Fatimid Administration WINDOW
	window = {
		name = "fatimid_administration_window"
		parentanchor = center
		size = { 750 900 }
		position = { -25 0 }
		#margin = { 20 20 }
		layer = windows_layer
		
		visible = "[GetVariableSystem.Exists( 'am_institutions_fatimid_administration_gui_toggle' )]"

		using = Window_Background
		using = Window_Decoration

		vbox = {
			using = Window_Margins
			layoutpolicy_horizontal = expanding
			## Header
			header_pattern = {
				layoutpolicy_horizontal = expanding
				blockoverride "header_text"
				{
					text = "fatimid_administration_tab_header"
				}
				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_administration_gui_toggle')]"
				}
			}

			# icon = {
			# 	#size = { 700 }
			# 	texture = "gfx/interface/icons/institutions/islamic_ui_horizontal.dds"					
			# }
			# icon = {
			# 	name = "tile_frame_top"
			# 	#parentanchor = hcenter
			# 	size = { 690 30 }
			# 	#position = { 0 5 }

			# 	texture = "gfx/interface/icons/institutions/islamic_ui_horizontal.dds"
			# 	spriteType = Corneredtiled
			# 	spriteborder = { 25 0 }
			# 	#mirror = vertical
			# 	texture_density = 1
			# }
			# icon = {
			# 	name = "tile_frame_top"
			# 	#parentanchor = hcenter
			# 	size = { 690 45 }
			# 	#position = { 0 5 }

			# 	texture = "gfx/interface/icons/institutions/islamic_ornament.dds"
			# 	spriteType = Corneredtiled
			# 	spriteborder = { 60 0 }
			# 	#mirror = vertical
			# 	#texture_density = 1
			# }
			
			## Diwan Realm Ascendency Bar
			hbox = {
				name = "administration_influence"
				layoutpolicy_horizontal = expanding

				margin = { 10 10 }

				background = {
					using = Background_Area_Dark
				}

				spacer = {
					size = { 6 6 }
				}

				icon = {
					texture = "gfx/interface/icons/ascendency.dds"
					size = { 35 35 }
				}

				text_single = {
					align = left
					text = "[ascendency|E]: "
					using = Font_Size_Medium
					default_format = "#bold"
				}

				text_single = {
					#align = left
					text = "[GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_diwan').GetValue)|0]"
					using = Font_Size_Medium
					#default_format = "#bold"
					tooltip = "ascendency_diwan_monthly_positive"
				}
				
				vbox = {

					

					widget = {
						name = "islamic_empire_ascendency_diwan"
						size = { 300 30 }	
	
						background = {
							using = Background_Area
							margin = { 3 2 }
						}

						hbox = {
							visible = "[LessThanOrEqualTo_CFixedPoint(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_diwan').GetValue,'(CFixedPoint)50')]"
							progressbar_green = {
								# size = 7500
								minimumsize = { 75 30 }
								min = 0
								max = 2500
								value = "[FixedPointToProgressbarValue(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_diwan').GetValue)]"
							}
							progressbar_green = {
								# size = 7500
								minimumsize = { 75 30 }
								min = 2500
								max = 5000
								value = "[FixedPointToProgressbarValue(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_diwan').GetValue)]"
							}
							progressbar_green = {
								# size = 7500
								minimumsize = { 75 30 }
								min = 5000
								max = 7500
								value = "[FixedPointToProgressbarValue(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_diwan').GetValue)]"
							}
							progressbar_green = {
								# size = 7500
								minimumsize = { 75 30 }
								min = 7500
								max = 10000
								value = "[FixedPointToProgressbarValue(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_diwan').GetValue)]"
							}
						}
						hbox = {
							visible = "[GreaterThan_CFixedPoint(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_diwan').GetValue,'(CFixedPoint)50')]"
							progressbar_red = {
								# size = 7500
								minimumsize = { 75 30 }
								min = 0
								max = 2500
								value = "[FixedPointToProgressbarValue(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_diwan').GetValue)]"
							}
							progressbar_red = {
								# size = 7500
								minimumsize = { 75 30 }
								min = 2500
								max = 5000
								value = "[FixedPointToProgressbarValue(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_diwan').GetValue)]"
							}
							progressbar_red = {
								# size = 7500
								minimumsize = { 75 30 }
								min = 5000
								max = 7500
								value = "[FixedPointToProgressbarValue(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_diwan').GetValue)]"
							}
							progressbar_red = {
								# size = 7500
								minimumsize = { 75 30 }
								min = 7500
								max = 10000
								value = "[FixedPointToProgressbarValue(GetPlayer.GetPrimaryTitle.MakeScope.Var('islamic_empire_ascendency_diwan').GetValue)]"
							}
						}
						## text
						hbox = {
							text_single = {
								# margin = { 10 5 }
								align = center
								layoutpolicy_horizontal = expanding
								text = "Minimal"
								autoresize = no
								tooltip = "islamic_empire_faction_ascendency_minimal_diwan_tooltip"
							}
							text_single = {
								align = center
								layoutpolicy_horizontal = expanding
								text = "Low"
								autoresize = no
								tooltip = "islamic_empire_faction_ascendency_low_diwan_tooltip"
							}
							text_single = {
								align = center
								layoutpolicy_horizontal = expanding
								text = "Normal"
								autoresize = no
								tooltip = "islamic_empire_faction_ascendency_normal_diwan_tooltip"
							}
							text_single = {
								align = center
								layoutpolicy_horizontal = expanding
								text = "High"
								autoresize = no
								tooltip = "islamic_empire_faction_ascendency_high_diwan_tooltip"
							}
						}
					}

					divider = {}

				}

				spacer = {
					size = { 6 6 }
				}

				spacer = {
					size = { 6 6 }
				}
				
			}

			# icon = {
			# 	name = "tile_frame_top_2"
			# 	#parentanchor = hcenter
			# 	size = { 690 30 }
			# 	#position = { 0 5 }

			# 	texture = "gfx/interface/icons/institutions/islamic_ui_horizontal.dds"
			# 	spriteType = Corneredtiled
			# 	spriteborder = { 25 0 }
			# 	mirror = vertical
			# 	texture_density = 1
			# }

			spacer = {
				size = { 6 6 }
			}

			## Buttons and portraits list
			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				background = {
					texture = "gfx/interface/icons/institutions/islamic_background_fill.dds"
					fittype = centercrop
					alpha = 0.2
	
					using = Mask_Rough_Edges
				}
				
				widget = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					vbox = {
						spacing = 10
						
						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							spacing = 10

							background = {
								fittype = centercrop
								alpha = 0.8

								using = Mask_Rough_Edges
							}

							## new experiment
							scrollbox = {
								name = "character_diwan_officials_grid"
								parentanchor = top
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								blockoverride "scrollbox_margins" { }

								blockoverride "scrollbox_content"
								{
									#spacing = 20
									margin = { 0 20 }

									dynamicgridbox = {
										datamodel = "[GetPlayer.MakeScope.GetList('list_fatimid_diwan_leaders')]"
										datamodel_wrap = 1
										#spacing = 5
										flipdirection = yes
										
										state = {
											name = get_list
											trigger_on_create = yes
											duration = 2
											on_start = "[GetScriptedGui('am_institutions_islamic_empire_fatimid_get_diwan_leaders').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											next = get_list
										}

										item = {
											## Gros bouton
											button_standard = {
												layoutpolicy_horizontal = expanding
												size = { 625 175 }	

												background = {
													fittype = centercrop
													texture = "gfx/interface/illustrations/decisions/z_ave_maria_muslim_reception_courtyard.dds"
													
													modify_texture = {
														texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
														blend_mode = alphamultiply
													}
												}

												background = {
													texture = "gfx/interface/component_tiles/tile_window_background.dds"
													spriteType = Corneredtiled
													spriteborder = { 40 8 }
													margin = { 10 0 }
													margin_right = 25
													texture_density = 2
								
													modify_texture = {
														name = "mask"
														texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
														blend_mode = alphamultiply
													}

													alpha = 0.5
												}

												## Boite principale horizontale ou tout est mis
												hbox = {
													layoutpolicy_horizontal = expanding
													layoutpolicy_vertical = expanding

													## Boite verticale gauche, portrait
													vbox = {
														layoutpolicy_vertical = expanding
														parentanchor = top|left
														portrait_shoulders = {
															datacontext = "[Scope.GetCharacter]"
			
															blockoverride "description_relation_text" {
																text = "[Character.GetPlayerGuestDescription]"
															}
			
															background = {
																using = Background_Area
															}
														}
													}

													## Boite verticale - infos et influence
													vbox = {
														parentanchor = top
														layoutpolicy_horizontal = expanding
														layoutpolicy_vertical = expanding
														expand = {}
														## Titre/nom du régiment
														hbox = {
															text_single = {
																align = left
																datacontext = "[Scope.GetCharacter]"
																text = "[Character.GetPrimaryTitle.GetBaseNameNoTier]"
																using = Font_Size_Medium
																default_format = "#bold"
															}
														}
														
														## Infos
														hbox = {
															#spacing = 25
															text_multi = {
																align = left
																max_width = 450
																autoresize = yes
																layoutpolicy_horizontal = expanding
																datacontext = "[Scope.GetCharacter]"
																text = "[Character.GetPrimaryTitle.MakeScope.Title.Custom( 'DiwanDescDisplay' )]"
																using = Font_Size_Small
																#default_format = "#bold"
															}
															
														}
														expand = {}

														## Influence
														hbox = {
															datacontext = "[Scope.GetCharacter]"
															max_width = 460
															name = "diwan_faction_influence"
															layoutpolicy_horizontal = expanding
															spacing = 10
															margin = { 10 10 }			
															
															icon = {
																texture = "gfx/interface/icons/influence.dds"
																#parentanchor = center
																size = { 35 35 }
															}
											
															#[Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)]
															text_single = {
																align = left
																text = "[influence|E]: "
																using = Font_Size_Medium
																#default_format = "#bold"
															}

															text_single = {
																#align = left
																text = "[Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)|0]"
																using = Font_Size_Medium
																#default_format = "#bold"
																tooltip = "influence_monthly_positive"
															}
															
															vbox = {
											
																widget = {
																	datacontext = "[Scope.GetCharacter]"
																	name = "islamic_empire_influence_diwan_individual"
																	size = { 300 30 }	
												
																	background = {
																		using = Background_Area
																	}
											
																	## Green / red bars
																	hbox = {
																		visible = "[LessThanOrEqualTo_CFixedPoint(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue,'(CFixedPoint)50')]"
																		progressbar_green = {
																			# size = 7500
																			minimumsize = { 75 30 }
																			min = 0
																			max = 2500
																			value = "[FixedPointToProgressbarValue(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)]"
																		}
																		progressbar_green = {
																			# size = 7500
																			minimumsize = { 75 30 }
																			min = 2500
																			max = 5000
																			value = "[FixedPointToProgressbarValue(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)]"
																		}
																		progressbar_green = {
																			# size = 7500
																			minimumsize = { 75 30 }
																			min = 5000
																			max = 7500
																			value = "[FixedPointToProgressbarValue(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)]"
																		}
																		progressbar_green = {
																			# size = 7500
																			minimumsize = { 75 30 }
																			min = 7500
																			max = 10000
																			value = "[FixedPointToProgressbarValue(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)]"
																		}
																	}
																	hbox = {
																		visible = "[GreaterThan_CFixedPoint(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue,'(CFixedPoint)50')]"
																		progressbar_red = {
																			# size = 7500
																			minimumsize = { 75 30 }
																			min = 0
																			max = 2500
																			value = "[FixedPointToProgressbarValue(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)]"
																		}
																		progressbar_red = {
																			# size = 7500
																			minimumsize = { 75 30 }
																			min = 2500
																			max = 5000
																			value = "[FixedPointToProgressbarValue(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)]"
																		}
																		progressbar_red = {
																			# size = 7500
																			minimumsize = { 75 30 }
																			min = 5000
																			max = 7500
																			value = "[FixedPointToProgressbarValue(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)]"
																		}
																		progressbar_red = {
																			# size = 7500
																			minimumsize = { 75 30 }
																			min = 7500
																			max = 10000
																			value = "[FixedPointToProgressbarValue(Character.GetPrimaryTitle.MakeScope.Var('islamic_empire_influence_internal_faction').GetValue)]"
																		}
																	}
																	
																	## text
																	hbox = {
																		text_single = {
																			align = center
																			layoutpolicy_horizontal = expanding
																			text = "Minimal"
																			autoresize = no
																			tooltip = "faction_influence_minimal_tooltip"
																			#tooltip = "influence_monthly_positive"
																		}
																		text_single = {
																			align = center
																			layoutpolicy_horizontal = expanding
																			text = "Low"
																			autoresize = no
																			tooltip = "faction_influence_low_tooltip"
																		}
																		text_single = {
																			align = center
																			layoutpolicy_horizontal = expanding
																			text = "Normal"
																			autoresize = no
																			tooltip = "faction_influence_normal_tooltip"
																		}
																		text_single = {
																			align = center
																			layoutpolicy_horizontal = expanding
																			text = "High"
																			autoresize = no
																			tooltip = "faction_influence_high_tooltip"
																		}
																	}
																}
											
																divider = {}					
											
															}															
											
															spacer = {
																size = { 6 6 }
															}
											
															spacer = {
																size = { 6 6 }
															}
															
														}
														
													}	

													expand = { }
													
												}

											}
											
										}
									}						
									
								}
							}
						}
					}					
										
				}
			
			}

			spacer = {
				size = { 6 6 }
			}

			## Footer area
			hbox = {
				name = "footer_admin"
				layoutpolicy_horizontal = expanding
				
				vbox = {
					layoutpolicy_horizontal = expanding
					text_single = {
						text = "   "
					}
					expand = {}
				}			
			}
		}
	}

	### AVE MARIA - Fatimid Dawa WINDOW
	window = {
		name = "fatimid_dawa_mission_window"
		parentanchor = center
		size = { 750 650 }
		position = { -25 0 }
		layer = windows_layer
		
		visible = "[GetVariableSystem.Exists( 'am_institutions_fatimid_dawa_mission_gui_toggle' )]"

		using = Window_Background
		using = Window_Decoration

		vbox = {
			using = Window_Margins
			
			## Header
			header_pattern = {
				layoutpolicy_horizontal = expanding
				blockoverride "header_text"
				{
					text = "fatimid_dawa_mission_tab_header"
				}
				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_dawa_mission_gui_toggle')]"
				}
			}

			## Divider for visuals
			divider = {
				layoutpolicy_horizontal = expanding
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				
				widget = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					vbox = {
						spacing = 10

						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							spacing = 10

							background = {
								#texture = "gfx/interface/illustrations/event_scenes/z_ave_maria_constantinople_akkubita_dining_hall.dds"
								fittype = centercrop
								alpha = 0.8

								using = Mask_Rough_Edges
							}

							## new experiment
							scrollbox = {
								name = "character_diwan_officials_grid"
								parentanchor = top
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								blockoverride "scrollbox_margins" { }

								blockoverride "scrollbox_content"
								{
									spacing = 20
									margin = { 0 20 }

									dynamicgridbox = {
										datamodel = "[GetPlayer.MakeScope.GetList('list_fatimid_dawa_leaders')]"
										datamodel_wrap = 1
										flipdirection = yes
										
										state = {
											name = get_list
											trigger_on_create = yes
											duration = 2
											on_start = "[GetScriptedGui('am_institutions_islamic_empire_fatimid_get_dawa_leaders').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											next = get_list
										}

										item = {
											## Gros bouton
											button_standard = {
												layoutpolicy_horizontal = expanding
												size = { 625 160 }	

												background = {
													fittype = centercrop
													#texture = "gfx/interface/illustrations/decisions/z_ave_maria_roman_victory_arch.dds"
													texture = "gfx/interface/illustrations/decisions/z_ave_maria_quran_recitation.dds"
													
													modify_texture = {
														texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
														blend_mode = alphamultiply
													}
												}

												## Boite principale horizontale ou tout est mis
												hbox = {
													#layoutpolicy_horizontal = expanding
													layoutpolicy_vertical = expanding

													## Boite verticale gauche, portrait
													vbox = {
														layoutpolicy_vertical = expanding
														parentanchor = top|left
														portrait_shoulders = {
															datacontext = "[Scope.GetCharacter]"
			
															blockoverride "description_relation_text" {
																text = "[Character.GetPlayerGuestDescription]"
															}
			
															background = {
																using = Background_Area
															}
														}
													}

													## Boite verticale - Titre/nom du régiment et Infos/boutons chacun ans leur boites horizontales
													vbox = {
														layoutpolicy_vertical = expanding
														parentanchor = top

														## Titre/nom du régiment
														hbox = {
															text_single = {
																datacontext = "[Scope.GetCharacter]"
																text = "[Character.GetPrimaryTitle.GetBaseNameNoTier]"
																using = Font_Size_Medium
																default_format = "#bold"
															}
														}
														
														## Infos
														hbox = {
															spacing = 25

															
														}
														
														
													}	
													
												}

											}
											
										}
									}						
									
								}
							}
						}
					}
					
										
				}
			
			}

			## Footer area
			hbox = {
				name = "footer_army"
				layoutpolicy_horizontal = expanding
				
				
			}
		}
	}

	######################################################
	#################### TOP RIGHT #######################
	######################################################

	### Top Right Bar
	widget = {
		visible = "[Not( IsPauseMenuShown )]"
		name = "top_bar"
		size = { 640 38 }
		parentanchor = top|right
		filter_mouse = all
		alwaystransparent = no
		layer = top

		using = Animation_ShowHide_Quick

		background = {
			texture = "gfx/interface/skinned/hud_top_right_bg.dds"
			margin_left = 20
			margin_bottom = 28
		}

		icon = {
			parentanchor = bottom|right
			position = { 7 23 }
			texture = "gfx/interface/component_decoration/decoration_arch.dds"
			size = { 30 30 }
			mirror = vertical
		}

		## Resources
		hbox = {
			name = "resources"
			margin_left = 20

			hbox = {
				name = "spendables"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				hbox = {
					name = "tutorial_highlight_resources_bar"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin_right = 5
					margin_left = 15

					hbox = {
						name = "gold"
						layoutpolicy_vertical = expanding
						minimumsize = { 90 0 }
						margin_left = 7
						margin_right = 5

						using = tooltip_ne

						tooltipwidget = {
							widget_gold_breakdown_tooltip = {
								blockoverride "income"
								{
									datacontext = "[InGameTopbar.GetIncomeBalanceBreakdown]"
								}

								blockoverride "expenses"
								{
									datacontext = "[InGameTopbar.GetExpensesBalanceBreakdown]"
								}
							}
						}

						hbox = {
							name = "gold"
							layoutpolicy_vertical = expanding

							hbox = {
								margin_top = -5
								spacing = 7

								icon = {
									name = "gold_icon"
									size = { 30 30 }
									texture = "gfx/interface/icons/icon_gold.dds"
								}

								flowcontainer = {
									margin_bottom = 7
									spacing = -6
									direction = vertical
									ignoreinvisible = yes

									text_single = {
										name = "gold_value_positive"
										layoutpolicy_horizontal = expanding
										visible = "[GreaterThanOrEqualTo_CFixedPoint(GetPlayer.GetGold, '(CFixedPoint)0')]"
										text = "[GetPlayer.GetGold|0]"
										max_width = 50
										default_format = "#high"
										using = Font_Size_Medium
									}

									text_single = {
										name = "gold_value_negative"
										layoutpolicy_horizontal = expanding
										visible = "[LessThan_CFixedPoint(GetPlayer.GetGold, '(CFixedPoint)0')]"


										text = "[GetPlayer.GetGold|0]"
										max_width = 50
										default_format = "#N"
										using = Font_Size_Medium
									}

									container = {
									text_single = {
										name = "balance_positive"
										visible = "[GreaterThanOrEqualTo_CFixedPoint(GetPlayerBalance, '(CFixedPoint)0')]"

										layoutpolicy_horizontal = expanding
										text = "CURRENT_BALANCE"

										max_width = 50
										default_format = "#low"
									}

									text_single = {
										name = "balance_negative"
										visible = "[LessThan_CFixedPoint(GetPlayerBalance, '(CFixedPoint)0')]"

										layoutpolicy_horizontal = expanding
										text = "CURRENT_BALANCE"

										max_width = 50
										default_format = "#N"
									}
								}
							}
						}
					}
					}

					divider_light = {
						layoutpolicy_vertical = expanding
						alpha = 0.8
					}

					hbox = {
						name = "prestige"
						datacontext = "[InGameTopbar.GetPrestigeItem]"
						layoutpolicy_vertical = expanding
						minimumsize = { 90 0 }

						using = tooltip_ne

						hbox = {
							margin_top = -5
							spacing = 7

							icon = {
								name = "prestige_icon"
								size = { 30 30 }
								texture = "[GetPlayer.GetPrestigeLevelTexture]"
							}

							flowcontainer = {
								margin_bottom = 7
								spacing = -6
								direction = vertical

								text_single = {
									name = "prestige_value"
									text = "[GetPlayer.GetPrestige|0]"
									max_width = 50
									default_format = "#high"
									using = Font_Size_Medium
								}

								container_resource_balance = {}
							}
						}

						tooltipwidget = {
							widget_resource_value_tooltip = {}
						}
					}

					divider_light = {
						layoutpolicy_vertical = expanding
						alpha = 0.8
					}

					button = {
						name = "piety"
						datacontext = "[InGameTopbar.GetPietyItem]"
						layoutpolicy_vertical = expanding
						onclick = "[DefaultOnFaithClick(GetPlayer.GetFaith.GetID)]"

						minimumsize = { 90 0 }
						margin_left = 7
						margin_right = 5

						using = tooltip_ne
						tooltipwidget = {
							widget_resource_value_tooltip = {}
						}

						hbox = {
							hbox = {
								margin_top = -5
								spacing = 6

								icon = {
									name = "piety_icon"
									size = { 30 30 }
									texture = "[GetPlayer.GetPietyLevelTexture]"
								}

								flowcontainer = {
									margin_bottom = 7
									spacing = -6
									direction = vertical

									text_single = {
										name = "piety_value"
										text = "[GetPlayer.GetPiety|0]"

										max_width = 50
										default_format = "#high"
										using = Font_Size_Medium
									}

									container_resource_balance = {}
								}
							}
						}
					}

					divider_light = {
						layoutpolicy_vertical = expanding
						alpha = 0.8
					}

					button = {
						name = "renown"
						datacontext = "[InGameTopbar.GetDynastyPrestigeItem]"
						layoutpolicy_vertical = expanding

						onclick = "[DefaultOnHouseCoatOfArmsClick(GetPlayer.GetHouse.GetID)]"

						minimumsize = { 90 0 }
						margin_left = 6
						margin_right = 5

						using = tooltip_ne
						tooltipwidget = {
							widget_resource_value_tooltip = {}
						}

						hbox = {
							hbox = {
								margin_top = -5
								spacing = 6

								icon = {
									visible = "[GetPlayer.IsDynast]"
									texture = "[GetPlayer.GetDynasty.GetDynastyPrestigeLevelTexture]"
									size = { 30 30 }
								}

								icon = {
									visible = "[Not(GetPlayer.IsDynast)]"
									texture = "[GetPlayer.GetDynasty.GetDynastyPrestigeLevelTexture]"
									size = { 30 30 }
									alpha = 0.3
								}

								flowcontainer = {
									visible = "[GetPlayer.IsDynast]"
									margin_bottom = 7
									spacing = -6
									direction = vertical

									text_single = {
										name = "prestige_value"
										text = "[GetPlayer.GetDynasty.GetPrestige|0]"

										max_width = 50
										default_format = "#high"
										using = Font_Size_Medium
									}

									container_resource_balance = {}
								}

								flowcontainer = {
									visible = "[Not(GetPlayer.IsDynast)]"
									margin_bottom = 7
									spacing = -6
									direction = vertical

									text_single = {
										name = "prestige_value_nodynast"
										text = "[GetPlayer.GetDynasty.GetPrestige|0]"

										max_width = 50
										default_format = "#low"
										using = Font_Size_Medium
									}

									container_resource_balance = {}
								}
							}
						}
					}
				}

				hbox = {
					name = "military"
					datacontext = "[GetPlayer]"
					datacontext = "[GetPlayerArmyComposition]"
					spacing = 5
					margin_left = 10
					margin_bottom = 3

					background = {
						texture = "gfx/interface/skinned/overlay_stone.dds"
						margin_right = 20
						margin_top = 20
						margin_bottom = 3
						texture_density = 2
						spritetype = corneredtiled
						color = { 0.4 0.4 0.44 1 }
						alpha = 0.9

						using = Mask_Rough_Edges
					}

					background = {
						texture = "gfx/interface/skinned/hud_top_right_bg_stone.dds"
						margin_right = 10
						margin_left = -2
						margin_top = 4
						texture_density = 2
						spritetype = corneredtiled
					}

					button_group = {
						onclick = "[ToggleGameViewData('military', GetPlayer.GetID)]"
						tooltip = "[ArmyComposition.GetArmyCompositionTooltip]"
						using = tooltip_ne

						flowcontainer = {
							margin = { 0 0 }
							spacing = 5

							icon = {
								name = "icon_soldier"
								texture = "gfx/interface/icons/icon_soldier.dds"
								size = { 25 25 }
							}

							flowcontainer = {
								direction = vertical
								min_width = 65

								flowcontainer = {
									spacing = 2

									text_single = {
										name = "strength"
										text = "[ArmyComposition.GetSoldierCountString]"
										default_format = "#high"
										align = nobaseline
									}

									army_quality_icon = {
										tooltip_enabled = no
									}
								}

								progressbar_standard = {
									name = "soldiers_max"
									size = { 40 8 }

									min = 0
									max = "[IntToFloat(ArmyComposition.GetMaxNumberOfSoldiers)]"
									value = "[IntToFloat(ArmyComposition.GetCurrentNumberOfSoldiers)]"
								}
							}
						}
					}

					button = {
						name = "domain_limit"
						layoutpolicy_vertical = expanding

						minimumsize = { 60 0 }

						margin_left = 3
						margin_bottom = 3

						tooltip = "[Character.GetDomainLimitTooltip]"
						using = tooltip_ne

						onclick = "[ToggleGameView('my_realm')]"

						background = {
							visible = "[GreaterThan_int32( Character.GetDomainSize, Character.GetDomainLimit )]"
							using = Status_Bad
							margin_bottom = -3
						}

						hbox = {
							icon = {
								texture = "gfx/interface/icons/icon_domain.dds"
								size = { 25 25 }
							}

							text_single = {
								name = "value"
								text = "[Character.GetDomainSize]/[Character.GetDomainLimit]"
								align = nobaseline
								margin_bottom = 1

								max_width = 110
							}
						}
					}
				}

				spacer = {
					size = { 10 0 }
				}
			}
		}

		widget = {
			size = { 100% 100% }

			background = {
				texture = "gfx/interface/skinned/hud_top_right_frame.dds"
				margin_left = 20
				margin_bottom = 28
			}
		}
	}

	### Outliner Button
	container = {
		visible = "[And( Not( IsPauseMenuShown ), And(Not(IsRightWindowOpen), IsDefaultGUIMode))]"
		parentanchor = top|right
		position = { -3 55 }

		using = Animation_ShowHide_Quick

		button_round = {
			name = "outliner_button"
			size = { 35 35 }
			alpha = 0.7

			onclick = "[ToggleGameView('outliner')]"
			tooltip = "TOGGLE_OUTLINER"

			state = {
				name = _mouse_enter
				alpha = 1
				duration = 0.7
				using = Animation_Curve_Default
			}

			state = {
				name = _mouse_leave
				alpha = 0.7
				duration = 0.2
				using = Animation_Curve_Default
			}

			button_outliner = {
				parentanchor = center
				alwaystransparent = yes
				size = { 25 25 }
			}
		}
	}

	### Main Tabs
	widget = {
		name = "main_tabs"
		visible = "[And( Not( IsPauseMenuShown ), And(Or(Not(IsObserver), GetPlayer.IsValid), IsDefaultGUIMode))]"
		parentanchor = top|right
		position = { 5 105 }
		size = { 50 425 }

		using = Animation_ShowHide_Quick

		widget = {
			visible = "[Not(IsRightWindowOpen)]"
			size = { 100% 100% }

			state = {
				name = _show
				alpha = 1
				duration = 0.1
				using = Animation_Curve_Default
			}

			state = {
				name = _hide
				duration = 0.6
				alpha = 0
				using = Animation_Curve_Default
			}

			icon = {
				size = { 100% 100% }
				texture = "gfx/interface/skinned/hud_maintab_bg.dds"

				@duration_maintab_button_enter = 0.03
				@duration_maintab_button_leave = 0.1

				modify_texture = {
					name = "glow_my_realm"
					texture = "gfx/interface/skinned/hud_maintab_bg_glow.dds"
					blend_mode = colordodge
					translate_uv = { -0.15 -0.04 }
					alpha = 0
				}

				modify_texture = {
					name = "glow_military"
					texture = "gfx/interface/skinned/hud_maintab_bg_glow.dds"
					blend_mode = colordodge
					translate_uv = { -0.15 -0.14 }
					alpha = 0
				}

				modify_texture = {
					name = "glow_council"
					texture = "gfx/interface/skinned/hud_maintab_bg_glow.dds"
					blend_mode = colordodge
					translate_uv = { -0.15 -0.25 }
					alpha = 0
				}

				modify_texture = {
					name = "glow_court"
					texture = "gfx/interface/skinned/hud_maintab_bg_glow.dds"
					blend_mode = colordodge
					translate_uv = { -0.15 -0.42 }
					alpha = 0
				}

				modify_texture = {
					name = "glow_intrigue"
					texture = "gfx/interface/skinned/hud_maintab_bg_glow.dds"
					blend_mode = colordodge
					translate_uv = { -0.15 -0.55 }
					alpha = 0
				}

				modify_texture = {
					name = "glow_factions"
					texture = "gfx/interface/skinned/hud_maintab_bg_glow.dds"
					blend_mode = colordodge
					translate_uv = { -0.15 -0.68 }
					alpha = 0
				}

				modify_texture = {
					name = "glow_decisions"
					texture = "gfx/interface/skinned/hud_maintab_bg_glow.dds"
					blend_mode = colordodge
					translate_uv = { -0.2 -0.79 }
					alpha = 0
				}

				# My Realm
				state = {
					name = "hud_tab_glow_my_realm_enter"
					duration = @duration_maintab_button_enter
					using = Animation_Curve_Default

					modify_texture = {
						name = "glow_my_realm"
						alpha = 1
						translate_uv = { -0.15 -0.04 }
					}
				}

				state = {
					name = "hud_tab_glow_my_realm_leave"
					duration = @duration_maintab_button_leave
					using = Animation_Curve_Default

					modify_texture = {
						name = "glow_my_realm"
						alpha = 0
						translate_uv = { -0.15 -0.04 }
					}
				}

				# Military
				state = {
					name = "hud_tab_glow_military_enter"
					duration = @duration_maintab_button_enter
					using = Animation_Curve_Default

					modify_texture = {
						name = "glow_military"
						alpha = 1
						translate_uv = { -0.15 -0.14 }
					}
				}

				state = {
					name = "hud_tab_glow_military_leave"
					duration = @duration_maintab_button_leave
					using = Animation_Curve_Default

					modify_texture = {
						name = "glow_military"
						alpha = 0
						translate_uv = { -0.15 -0.14 }
					}
				}

				# Council
				state = {
					name = "hud_tab_glow_council_enter"
					duration = @duration_maintab_button_enter
					using = Animation_Curve_Default

					modify_texture = {
						name = "glow_council"
						alpha = 1
						translate_uv = { -0.15 -0.25 }
					}
				}

				state = {
					name = "hud_tab_glow_council_leave"
					duration = @duration_maintab_button_leave
					using = Animation_Curve_Default

					modify_texture = {
						name = "glow_council"
						alpha = 0
						translate_uv = { -0.15 -0.25 }
					}
				}

				# Court
				state = {
					name = "hud_tab_glow_court_enter"
					duration = @duration_maintab_button_enter
					using = Animation_Curve_Default

					modify_texture = {
						name = "glow_court"
						alpha = 1
						translate_uv = { -0.15 -0.42 }
					}
				}

				state = {
					name = "hud_tab_glow_court_leave"
					duration = @duration_maintab_button_leave
					using = Animation_Curve_Default

					modify_texture = {
						name = "glow_court"
						alpha = 0
						translate_uv = { -0.15 -0.42 }
					}
				}

				# Intrigue
				state = {
					name = "hud_tab_glow_intrigue_enter"
					duration = @duration_maintab_button_enter
					using = Animation_Curve_Default

					modify_texture = {
						name = "glow_intrigue"
						alpha = 1
						translate_uv = { -0.15 -0.55 }
					}
				}

				state = {
					name = "hud_tab_glow_intrigue_leave"
					duration = @duration_maintab_button_leave
					using = Animation_Curve_Default

					modify_texture = {
						name = "glow_intrigue"
						alpha = 0
						translate_uv = { -0.15 -0.55 }
					}
				}

				# Factions
				state = {
					name = "hud_tab_glow_factions_enter"
					duration = @duration_maintab_button_enter
					using = Animation_Curve_Default

					modify_texture = {
						name = "glow_factions"
						alpha = 1
						translate_uv = { -0.15 -0.68 }
					}
				}

				state = {
					name = "hud_tab_glow_factions_leave"
					duration = @duration_maintab_button_leave
					using = Animation_Curve_Default

					modify_texture = {
						name = "glow_factions"
						alpha = 0
						translate_uv = { -0.15 -0.68 }
					}
				}

				# Decisions
				state = {
					name = "hud_tab_glow_decisions_enter"
					duration = @duration_maintab_button_enter
					using = Animation_Curve_Default

					modify_texture = {
						name = "glow_decisions"
						alpha = 1
						translate_uv = { -0.2 -0.79 }
					}
				}

				state = {
					name = "hud_tab_glow_decisions_leave"
					duration = @duration_maintab_button_leave
					using = Animation_Curve_Default

					modify_texture = {
						name = "glow_decisions"
						alpha = 0
						translate_uv = { -0.2 -0.79 }
					}
				}

				## AVE MARIA INSTITUTIONS
				# INSTITUTIONS GLOWING BUTTON
				state = {
					name = "hud_tab_glow_institutions_enter"
					duration = @duration_maintab_button_enter
					using = Animation_Curve_Default

					modify_texture = {
						name = "glow_decisions"
						alpha = 1
						translate_uv = { -0.2 -0.79 }
					}
				}

				state = {
					name = "hud_tab_glow_institutions_leave"
					duration = @duration_maintab_button_leave
					using = Animation_Curve_Default

					modify_texture = {
						name = "glow_decisions"
						alpha = 0
						translate_uv = { -0.2 -0.79 }
					}
				}
			}
		}

		vbox = {
			alwaystransparent = no
			filter_mouse = all
			margin_top = 15
			margin_bottom = 20
			margin_left = 2

			vbox = {
				button_hud_main_tab = {
					name = "tab_my_realm"
					tooltip = "MY_REALM_BUTTON"

					blockoverride "maintab_button"
					{
						texture = "gfx/interface/skinned/hud_maintab/maintab_my_realm.dds"

						onclick = "[ToggleGameView('my_realm')]"
						shortcut = "my_realm_window"
						down = "[IsGameViewOpen('my_realm')]"

						## AVE MARIA TO CLOSE DOWN INSTITUTION WINDOW
						onclick = "[GetVariableSystem.Toggle( 'am_realm_tab_toggle' )]"
						onclick = "[GetVariableSystem.Clear('am_institutions_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_army_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_senate_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_administration_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear( 'am_institutions_fatimid_administration_gui_toggle' )]"
						onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_dawa_mission_gui_toggle')]"
					}

					state = {
						name = _mouse_hierarchy_enter
						on_start = "[PdxGuiInterruptThenTriggerAllAnimations('hud_tab_glow_my_realm_leave','hud_tab_glow_my_realm_enter')]"
					}

					state = {
						name = _mouse_hierarchy_leave
						on_start = "[PdxGuiInterruptThenTriggerAllAnimations('hud_tab_glow_my_realm_enter','hud_tab_glow_my_realm_leave')]"
					}
				}

				button_hud_main_tab = {
					name = "tab_military"
					tooltip = "MILITARY_BUTTON"

					blockoverride "maintab_button"
					{
						texture = "gfx/interface/skinned/hud_maintab/maintab_military.dds"

						onclick = "[ToggleGameViewData('military', GetPlayer.GetID)]"
						shortcut = "military_window"
						down = "[IsGameViewOpen('military')]"

						## AVE MARIA TO CLOSE DOWN INSTITUTION WINDOW
						onclick = "[GetVariableSystem.Toggle( 'am_military_tab_toggle' )]"
						onclick = "[GetVariableSystem.Clear('am_institutions_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_army_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_senate_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_administration_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear( 'am_institutions_fatimid_administration_gui_toggle' )]"
						onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_dawa_mission_gui_toggle')]"
					}

					state = {
						name = _mouse_hierarchy_enter
						on_start = "[PdxGuiInterruptThenTriggerAllAnimations('hud_tab_glow_military_leave','hud_tab_glow_military_enter')]"
					}

					state = {
						name = _mouse_hierarchy_leave
						on_start = "[PdxGuiInterruptThenTriggerAllAnimations('hud_tab_glow_military_enter','hud_tab_glow_military_leave')]"
					}
				}

				button_hud_main_tab = {
					name = "tab_council"
					tooltip = "COUNCIL_BUTTON"

					blockoverride "maintab_button"
					{
						texture = "gfx/interface/skinned/hud_maintab/maintab_council.dds"

						onclick = "[ToggleGameViewData('council_window', GetPlayer.GetID)]"
						shortcut = "council_window"
						down = "[IsGameViewOpen('council_window')]"

						## AVE MARIA TO CLOSE DOWN INSTITUTION WINDOW
						onclick = "[GetVariableSystem.Toggle( 'am_council_tab_toggle' )]"
						onclick = "[GetVariableSystem.Clear('am_institutions_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_army_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_senate_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_administration_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear( 'am_institutions_fatimid_administration_gui_toggle' )]"
						onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_dawa_mission_gui_toggle')]"

						# on_start = "[GetVariableSystem.Toggle( 'council_tabs_inner' )]"
						# on_start = "[GetVariableSystem.Toggle( 'council_vanilla' )]"
						onclick = "[GetVariableSystem.Toggle( 'council_tabs_inner' )]"
						onclick = "[GetVariableSystem.Toggle( 'council_vanilla' )]"

					}

					state = {
						name = _mouse_hierarchy_enter
						on_start = "[PdxGuiInterruptThenTriggerAllAnimations('hud_tab_glow_council_leave','hud_tab_glow_council_enter')]"
					}

					state = {
						name = _mouse_hierarchy_leave
						on_start = "[PdxGuiInterruptThenTriggerAllAnimations('hud_tab_glow_council_enter','hud_tab_glow_council_leave')]"
					}
				}
			}

			widget = {
				layoutpolicy_horizontal = expanding
				size = { 0 15 }

				icon = {
					visible = "[And( Not( IsPauseMenuShown ), And(Or(Not(IsObserver), GetPlayer.IsValid), IsDefaultGUIMode))]"
					parentanchor = right|vcenter
					position = { -5 0 }
					texture = "gfx/interface/skinned/hud_spike_big.dds"
					size = { 25 15 }

					using = Animation_ShowHide_Standard
				}
			}

			vbox = {
				button_hud_main_tab = {
					name = "tab_court"
					tooltip = "COURT_BUTTON"

					blockoverride "maintab_button"
					{
						texture = "gfx/interface/skinned/hud_maintab/maintab_court.dds"

						onclick = "[ToggleGameViewData( 'court_window', GetPlayer.GetID )]"
						shortcut = "court_window"
						down = "[IsGameViewOpen( 'court_window' )]"

						## AVE MARIA TO CLOSE DOWN INSTITUTION WINDOW
						onclick = "[GetVariableSystem.Toggle( 'am_court_tab_toggle' )]"
						onclick = "[GetVariableSystem.Clear('am_institutions_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_army_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_senate_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_administration_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear( 'am_institutions_fatimid_administration_gui_toggle' )]"
						onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_dawa_mission_gui_toggle')]"
					}

					state = {
						name = _mouse_hierarchy_enter
						on_start = "[PdxGuiInterruptThenTriggerAllAnimations('hud_tab_glow_court_leave','hud_tab_glow_court_enter')]"
					}

					state = {
						name = _mouse_hierarchy_leave
						on_start = "[PdxGuiInterruptThenTriggerAllAnimations('hud_tab_glow_court_enter','hud_tab_glow_court_leave')]"
					}
				}

				button_hud_main_tab = {
					name = "tab_intrigue"
					tooltip = "INTRIGUE_BUTTON"

					blockoverride "maintab_button"
					{
						texture = "gfx/interface/skinned/hud_maintab/maintab_intrigue.dds"

						onclick = "[ToggleGameViewData('intrigue_window', GetPlayer.GetID)]"
						shortcut = "intrigue_window"
						down = "[IsGameViewOpen('intrigue_window')]"

						## AVE MARIA TO CLOSE DOWN INSTITUTION WINDOW
						onclick = "[GetVariableSystem.Toggle( 'am_intrigue_tab_toggle' )]"
						onclick = "[GetVariableSystem.Clear('am_institutions_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_army_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_senate_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_administration_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear( 'am_institutions_fatimid_administration_gui_toggle' )]"
						onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_dawa_mission_gui_toggle')]"
					}

					state = {
						name = _mouse_hierarchy_enter
						on_start = "[PdxGuiInterruptThenTriggerAllAnimations('hud_tab_glow_intrigue_leave','hud_tab_glow_intrigue_enter')]"
					}

					state = {
						name = _mouse_hierarchy_leave
						on_start = "[PdxGuiInterruptThenTriggerAllAnimations('hud_tab_glow_intrigue_enter','hud_tab_glow_intrigue_leave')]"
					}
				}

				button_hud_main_tab = {
					name = "tab_factions"
					tooltip = "FACTION_BUTTON"

					blockoverride "maintab_button"
					{
						texture = "gfx/interface/skinned/hud_maintab/maintab_factions.dds"

						onclick = "[ToggleGameView('factions_window')]"
						shortcut = "factions_window"
						down = "[IsGameViewOpen('factions_window')]"

						## AVE MARIA TO CLOSE DOWN INSTITUTION WINDOW
						onclick = "[GetVariableSystem.Toggle( 'am_factions_tab_toggle' )]"
						onclick = "[GetVariableSystem.Clear('am_institutions_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_army_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_senate_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_administration_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear( 'am_institutions_fatimid_administration_gui_toggle' )]"
						onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_dawa_mission_gui_toggle')]"
						
					}

					state = {
						name = _mouse_hierarchy_enter
						on_start = "[PdxGuiInterruptThenTriggerAllAnimations('hud_tab_glow_factions_leave','hud_tab_glow_factions_enter')]"
					}

					state = {
						name = _mouse_hierarchy_leave
						on_start = "[PdxGuiInterruptThenTriggerAllAnimations('hud_tab_glow_factions_enter','hud_tab_glow_factions_leave')]"
					}
				}

				button_hud_main_tab = {
					name = "tab_decisions"
					tooltip = "DECISIONS_BUTTON"

					blockoverride "maintab_button"
					{
						texture = "gfx/interface/skinned/hud_maintab/maintab_decisions.dds"

						onclick = "[ToggleGameView('decisions')]"
						shortcut = "decision_window"
						down = "[IsGameViewOpen('decisions')]"

						## AVE MARIA TO CLOSE DOWN INSTITUTION WINDOW
						onclick = "[GetVariableSystem.Toggle( 'am_decisions_tab_toggle' )]"
						onclick = "[GetVariableSystem.Clear('am_institutions_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_army_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_senate_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_administration_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear( 'am_institutions_fatimid_administration_gui_toggle' )]"
						onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_dawa_mission_gui_toggle')]"
					}

					state = {
						name = _mouse_hierarchy_enter
						on_start = "[PdxGuiInterruptThenTriggerAllAnimations('hud_tab_glow_decisions_leave','hud_tab_glow_decisions_enter')]"
					}

					state = {
						name = _mouse_hierarchy_leave
						on_start = "[PdxGuiInterruptThenTriggerAllAnimations('hud_tab_glow_decisions_enter','hud_tab_glow_decisions_leave')]"
					}
				}

				## AVE MARIA BUTTON to open institutions window
				button_hud_main_tab = {
					name = "tab_insitutions_open"
					tooltip = "INSTITUTIONS_BUTTON"

					blockoverride "maintab_button"
					{
						texture = "gfx/interface/icons/hud_maintab/maintab_institutions.dds"

						## Opening the Institutions tab
						onclick = "[GetVariableSystem.Toggle( 'am_institutions_gui_toggle' )]"
						## Closing the other tabs
						onclick = "[GetVariableSystem.Clear( 'am_realm_tab_toggle' )]"
						onclick = "[GetVariableSystem.Clear( 'am_military_tab_toggle' )]"
						onclick = "[GetVariableSystem.Clear( 'am_council_tab_toggle' )]"
						onclick = "[GetVariableSystem.Clear( 'am_court_tab_toggle' )]"
						onclick = "[GetVariableSystem.Clear( 'am_intrigue_tab_toggle' )]"
						onclick = "[GetVariableSystem.Clear( 'am_factions_tab_toggle' )]"
						onclick = "[GetVariableSystem.Clear( 'am_decisions_tab_toggle' )]"

						onclick = "[GetVariableSystem.Clear('am_institutions_army_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_senate_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_administration_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_army_factions_gui_toggle')]"
						onclick = "[GetVariableSystem.Clear( 'am_institutions_fatimid_administration_gui_toggle' )]"
						onclick = "[GetVariableSystem.Clear('am_institutions_fatimid_dawa_mission_gui_toggle')]"
						## Stuff to make it work ?
						datacontext = "[GetVariableSystem]"
						# datacontext = "[GetPlayer.GetID]"	
						## Click on the button again to close the window
						down = "[GetVariableSystem.Clear('am_institutions_gui_toggle')]"
					}

					state = {
						name = _mouse_hierarchy_enter
						on_start = "[PdxGuiInterruptThenTriggerAllAnimations('hud_tab_glow_institutions_leave','hud_tab_glow_institutions_enter')]"
					}

					state = {
						name = _mouse_hierarchy_leave
						on_start = "[PdxGuiInterruptThenTriggerAllAnimations('hud_tab_glow_institutions_enter','hud_tab_glow_institutions_leave')]"
					}
				}
			}

			# Invisible button to ensure that these shortcuts don't get hidden
			button = {
				size = { 0 0 }
				onclick = "[ToggleCharacter( GetPlayer.GetID )]"
				shortcut = "character_window"
			}
		}
	}

	widget_stress_sounds = {}
}

### Time Controls
icon = {
	name = "timeline_widget"
	visible = "[And( Not( IsPauseMenuShown ), TimelineWidget.ShouldBeVisible )]"
	size = { 649 65 }
	parentanchor = bottom|right
	filter_mouse = all
	alwaystransparent = yes
	layer = top
	allow_outside = yes
	texture = "gfx/interface/skinned/hud_bg_gamespeed.dds"

	using = Animation_ShowHide_Quick

	widget = {
		parentanchor = bottom|right
		size = { 629 45 }
		allow_outside = yes

	icon = {
		parentanchor = top|right
		position = { 7 -15}
			texture = "gfx/interface/skinned/component_decoration/decoration_arch.dds"
		size = { 30 30 }
	}

	icon = {
		visible = "[IsManuallyPaused]"
		size = { 100% 100% }
			texture = "gfx/interface/skinned/hud_pause_indicator.dds"
		color = { 0.4 0.25 0.25 0.7 }

		state = {
			name = _show
			using = Animation_FadeIn_Quick
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Standard
		}
	}

	icon = {
		visible = "[IsPausedByEvent]"
		size = { 100% 100% }
			texture = "gfx/interface/skinned/hud_pause_indicator.dds"
		color = { 0.3 0.3 0.3 0.7 }

		state = {
			name = _show
			using = Animation_FadeIn_Quick
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Standard
		}
	}

	hotkeys_HUD = {}

	### Extra Buttons
	flowcontainer = {
		name = "extra_buttons_menu"
		visible = "[And( Not( IsPauseMenuShown ), GetVariableSystem.Exists( 'extra_buttons_expand' ))]"
		parentanchor = bottom|right
		widgetanchor = bottom|hcenter
		position = { -570 -20 }
		alwaystransparent = no
		margin = { 40 40 }
		direction = vertical
		spacing = 3
		ignoreinvisible = yes
		allow_outside = yes

		background = {
			using = Background_Area_Dark
			margin = { -25 -25 }
		}

		state = {
			name = _show
			using = Animation_FadeIn_Quick

			position_y = -20
		}

		state = {
			name = _hide

			using = Animation_FadeOut_Quick
			position_y = 60
		}

		state = {
			name = _mouse_hierarchy_leave
			on_finish = "[GetVariableSystem.Clear( 'extra_buttons_expand' )]"
		}

		button_standard = {
			name = "find_character_button"
			text = "FIND_CHARACTER"
			onclick = "[ToggleGameView( 'character_finder' )]"
			onclick = "[GetVariableSystem.Toggle( 'extra_buttons_expand' )]"
			tooltip = "IM_TT_FIND_CHARACTER"
			shortcut = "character_finder"
		}

		button_standard = {
			name = "find_title_button"

			onclick = "[ToggleGameView( 'find_title' )]"
			onclick = "[GetVariableSystem.Toggle( 'extra_buttons_expand' )]"

			down = "[IsGameViewOpen('find_title')]"
			shortcut = "find_title_shortcut"

			text = "FIND_TITLE"
			tooltip = "IM_TT_FIND_TITLE"
		}

		button_standard = {
			name = "legacy_button"
			text = "SHOW_LEGACY"
			onclick = "[ToggleLegacy]"
			down = "[IsGameViewOpen('succession_event')]"
			onclick = "[GetVariableSystem.Toggle( 'extra_buttons_expand' )]"
			tooltip = "IM_TT_SHOW_LEGACY"
		}

		button_standard = {
			name = "go_to_capital_button"
			text = "GO_TO_CAPITAL"
			onclick = "[OnGoToPlayerCapital]"
			onclick = "[GetVariableSystem.Toggle( 'extra_buttons_expand' )]"
			shortcut = "go_to_capital"
			tooltip = "IM_TT_GO_TO_CAPITAL"
			visible = "[GetPlayer.IsValid]"
		}
	}

	hbox = {
		margin_left = 35
		allow_outside = yes

		hbox = {
			margin_top = 12
			spacing = 3

			button_dots = {
				name = "button_hud_extra_buttons"
				onclick = "[GetVariableSystem.Toggle( 'extra_buttons_expand' )]"
				tooltip = MORE_POPOUT_TT
				using = tooltip_ne
			}

			button_menu = {
				name = "pause_menu_button"
				onclick = "[OnPauseMenu]"
				tooltip = INGAME_MENU_TT
				using = tooltip_ne

				tooltipwidget = {
					using = TooltipWithFakeShortcut
					blockoverride "shortcut_text"
					{
						text = FAKE_ESCAPE
					}
				}
			}

			button_encyclopedia_small = {
				name = "encyclopedia_button_extended_menu"
				tooltip = "OPEN_ENCYCLOPEDIA"
				onclick = "[ToggleEncyclopedia]"
				shortcut = "encyclopedia"
				using = tooltip_ne
			}
		}

		hbox = {
			name = "tutorial_highlight_bottom_right_bar"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			margin_right = 5
			margin_left = 15
			margin_top = 12
			allow_outside = yes

			## Date
			button_standard_hover = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				onclick = "[OnPause]"

				tooltip = "CURRENT_DATE_TOOLTIP"
				using = tooltip_nw
				tooltip_offset = { 0 10 }

				margin_widget = {
					visible = "[Not(Or(IsPausedByEvent, IsManuallyPaused))]"
					size = { 100% 100% }

					state = {
						name = _show
						using = Animation_FadeIn_Quick
					}

					state = {
						name = _hide
						using = Animation_FadeOut_Standard
					}

					Animation_HUD_daily_tick = {
						visible = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)1')]"
						size = { 100% 100% }

						blockoverride "duration"
						{
							duration = 30
						}

						blockoverride "alpha"
						{
							alpha = 0.3
						}
					}

					Animation_HUD_daily_tick = {
						visible = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)2')]"
						size = { 100% 100% }

						blockoverride "duration"
						{
							duration = 15
						}

						blockoverride "alpha"
						{
							alpha = 0.25
						}
					}

					Animation_HUD_daily_tick = {
						visible = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)3')]"
						size = { 100% 100% }

						blockoverride "duration"
						{
							duration = 7.5
						}

						blockoverride "alpha"
						{
							alpha = 0.2
						}
					}

					Animation_HUD_daily_tick = {
						visible = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)4')]"
						size = { 100% 100% }

						blockoverride "duration"
						{
							duration = 3.75
						}

						blockoverride "alpha"
						{
							alpha = 0.15
						}
					}

					Animation_HUD_daily_tick = {
						visible = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)5')]"
						size = { 100% 100% }

						blockoverride "duration"
						{
							duration = 1.9
						}

						blockoverride "alpha"
						{
							alpha = 0.15
						}
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					margin = { 5 0 }
					margin_bottom = 2

					hbox = {
						layoutpolicy_horizontal = expanding
						margin_top = 2
						margin_right = 2

						expand = {}

						text_single = {
							name = "date_text_sp"
							visible = "[Not(GameHasMultiplePlayers)]"

							text = "CURRENT_DATE"
							default_format = "#date"
							align = right|nobaseline
							using = Font_Size_Medium
						}

						text_single = {
							name = "date_text_mp"
							visible = "[GameHasMultiplePlayers]"
							layoutpolicy_horizontal = expanding

							text = "CURRENT_DATE"
							default_format = "#medium;glow_color:{0.1,0.1,0.1,1}"
							align = right|nobaseline
							using = Font_Size_Medium
						}
					}

					container = {
						name = "pause_play_icons"

						button_pause = {
							visible = "[Not(Or(IsPausedByEvent, IsManuallyPaused))]"
							alwaystransparent = yes
							parentanchor = center
						}

						button_play = {
							visible = "[Or(IsPausedByEvent, IsManuallyPaused)]"
							alwaystransparent = yes
							parentanchor = center
						}
					}
				}
			}

			button_normal = {
				shortcut = "decrease_speed"
				shortcut = "decrease_speed_2"
				shortcut = "decrease_speed_3"
				onclick = "[OnDecreaseGameSpeed]"
			}

			button_normal = {
				shortcut = "increase_speed"
				shortcut = "increase_speed_2"
				shortcut = "increase_speed_3"
				onclick = "[OnIncreaseGameSpeed]"
			}

			hbox = {
				layoutpolicy_vertical = expanding
				margin_bottom = -6
				margin_top = -4
				allow_outside = yes

				icon = {
					name = "speed_indicator"
					layoutpolicy_vertical = expanding
					size = { 170 0 }
					framesize = { 200 30 }
					texture = "gfx/interface/hud/speed_indicator.dds"
					frame = "[GetCurrentGameSpeed]"
					tooltip = "CURRENT_SPEED_TOOLTIP"
					tooltip_offset = { 0 -170 }
					alpha = 0.8

					modify_texture = {
						visible = "[And(IsPausedByEvent, Not(IsManuallyPaused))]"
						texture = "gfx/interface/hud/speed_indicator_auto_pause.dds"
						spritetype = corneredtiled
						blend_mode = darken
						texture_density = 2
					}

					modify_texture = {
						visible = "[IsManuallyPaused]"
						texture = "gfx/interface/hud/speed_indicator_pause.dds"
						spritetype = corneredtiled
						blend_mode = darken
						texture_density = 2
					}

					modify_texture = {
						visible = "[Not(Or(IsPausedByEvent, IsManuallyPaused))]"
						texture = "gfx/interface/hud/speed_indicator_play.dds"
						spritetype = corneredtiled
						blend_mode = darken
						texture_density = 2
					}

					button = {
						visible = "[Not( GameHasMultiplePlayers )]"
						onclick = "[OnPause]"
						shortcut = "pause"
					}

					icon = {
						parentanchor = right|vcenter
						position = { 10 0 }
							size = { 15 90%}
							texture = "gfx/interface/skinned/overlay_stone.dds"
							color = { 0.32 0.32 0.32 1 }
					}

					icon = {
						size = { 100% 100% }
							texture = "gfx/interface/skinned/speed_indicator_frame.dds"
					}

					hbox = {
						margin_left = 6
						margin_right = 6

						button = {
							name = "speed_1"
							shortcut = "speed_1"
							layoutpolicy_horizontal = shrinking
							layoutpolicy_vertical = expanding
							size = { 34 18 }

							alwaystransparent = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)1')]"
							onclick = "[SetGameSpeed('(int32)0')]"
							tooltip = "CHANGE_SPEED_TOOLTIP_1"
							using = tooltip_ne

							alpha = 0

							state = {
								name = _mouse_enter
								alpha = 1
								duration = 0.1
								using = Animation_Curve_Default
							}

							state = {
								name = _mouse_leave
								alpha = 0
								duration = 0.1
								using = Animation_Curve_Default
							}

							margin_widget = {
								size = { 100% 100% }
								margin = { 0 7 }

								icon = {
									size = { 100% 100% }
									texture = "gfx/interface/hud/speed_indicator_mouseover.dds"
								}
							}
						}

						button = {
							name = "speed_2"
							shortcut = "speed_2"
							layoutpolicy_horizontal = shrinking
							layoutpolicy_vertical = expanding
							size = { 34 18 }

							alwaystransparent = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)2')]"
							onclick = "[SetGameSpeed('(int32)1')]"
							tooltip = "CHANGE_SPEED_TOOLTIP_2"
							using = tooltip_ne

							alpha = 0

							state = {
								name = _mouse_enter
								alpha = 1
								duration = 0.1
								using = Animation_Curve_Default
							}

							state = {
								name = _mouse_leave
								alpha = 0
								duration = 0.1
								using = Animation_Curve_Default
							}

							margin_widget = {
								size = { 100% 100% }
								margin = { 0 7 }

								icon = {
									size = { 100% 100% }
									texture = "gfx/interface/hud/speed_indicator_mouseover.dds"
								}
							}
						}

						button = {
							name = "speed_3"
							shortcut = "speed_3"
							layoutpolicy_horizontal = shrinking
							layoutpolicy_vertical = expanding
							size = { 34 18 }

							alwaystransparent = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)3')]"
							onclick = "[SetGameSpeed('(int32)2')]"
							tooltip = "CHANGE_SPEED_TOOLTIP_3"
							using = tooltip_ne

							alpha = 0

							state = {
								name = _mouse_enter
								alpha = 1
								duration = 0.1
								using = Animation_Curve_Default
							}

							state = {
								name = _mouse_leave
								alpha = 0
								duration = 0.1
								using = Animation_Curve_Default
							}

							margin_widget = {
								size = { 100% 100% }
								margin = { 0 7 }

								icon = {
									size = { 100% 100% }
									texture = "gfx/interface/hud/speed_indicator_mouseover.dds"
								}
							}
						}

						button = {
							name = "speed_4"
							shortcut = "speed_4"
							layoutpolicy_horizontal = shrinking
							layoutpolicy_vertical = expanding
							size = { 34 18 }

							alwaystransparent = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)4')]"
							onclick = "[SetGameSpeed('(int32)3')]"
							tooltip = "CHANGE_SPEED_TOOLTIP_4"
							using = tooltip_ne

							alpha = 0

							state = {
								name = _mouse_enter
								alpha = 1
								duration = 0.1
								using = Animation_Curve_Default
							}

							state = {
								name = _mouse_leave
								alpha = 0
								duration = 0.1
								using = Animation_Curve_Default
							}

							margin_widget = {
								size = { 100% 100% }
								margin = { 0 7 }

								icon = {
									size = { 100% 100% }
									texture = "gfx/interface/hud/speed_indicator_mouseover.dds"
								}
							}
						}

						button = {
							name = "speed_5"
							shortcut = "speed_5"
							layoutpolicy_horizontal = shrinking
							layoutpolicy_vertical = expanding
							size = { 34 18 }

							alwaystransparent = "[EqualTo_int32(GetCurrentGameSpeed, '(int32)5')]"
							onclick = "[SetGameSpeed('(int32)4')]"
							tooltip = "CHANGE_SPEED_TOOLTIP_5"
							using = tooltip_ne

							alpha = 0

							state = {
								name = _mouse_enter
								alpha = 1
								duration = 0.1
								using = Animation_Curve_Default
							}

							state = {
								name = _mouse_leave
								alpha = 0
								duration = 0.1
								using = Animation_Curve_Default
							}

							margin_widget = {
								size = { 100% 100% }
								margin = { 0 7 }

								icon = {
									size = { 100% 100% }
									texture = "gfx/interface/hud/speed_indicator_mouseover.dds"
								}
							}
						}
					}
				}
			}
		}

		# Just the hotkeys for increase/decrease speed
		container = {
			name = "speed_hotkeys"

			button = {
				name = "increase_speed"
				size = { 0 0 }

				shortcut = "increase_speed"
				shortcut = "increase_speed_2"
				onclick = "[OnIncreaseGameSpeed]"
				oversound = "event:/SFX/UI/Generic/sfx_ui_generic_pointer_over"
			}

			button = {
				name = "decrease_speed"
				size = { 0 0 }

				shortcut = "decrease_speed"
				shortcut = "decrease_speed_2"
				onclick = "[OnDecreaseGameSpeed]"
				clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_decrement"
			}
		}

		widget_gamespeed_sounds = {}
	}
	}
}

### Bottom Left
widget = {
	name = "bottom_bar"
	visible = "[And( Not( IsPauseMenuShown ), IsDefaultGUIMode )]"
	size = { 100% 100% }
	layer = bottom
	datacontext = "[GetPlayer]"

	using = Animation_ShowHide_Quick

	icon = {
		visible = "[And(GetPlayer.IsValid, Not(GetVariableSystem.Exists( 'hide_bottom_left_HUD')))]"
		parentanchor = bottom|left
		size = { 462 64 }
		texture = "gfx/interface/skinned/hud_bg_character_bar.dds"
		spritetype = corneredtiled
		spriteborder_left = 70
		spriteborder_right = 240
		texture_density = 2

		state = {
			name = _show
			using = Animation_Curve_Default
			duration = 0.21

			position = { 0 0 }
			alpha = 1
		}

		state = {
			name = _hide
			using = Animation_Curve_Default
			duration = 0.21

			position = { -36 50 }
			alpha = 0
		}
	}

	### BOTTOM LEFT CHARACTER PORTRAIT
	container = {
		datacontext = "[GetPlayer]"
		visible = "[And(GetPlayer.IsValid, Not(GetVariableSystem.Exists( 'hide_bottom_left_HUD')))]"
		parentanchor = bottom|left


		state = {
			name = _show
			using = Animation_Curve_Default
			duration = 0.15

			position = { 0 0 }
			alpha = 1
		}

		state = {
			name = _hide
			using = Animation_Curve_Default
			duration = 0.15

			position = { 0 50 }
			alpha = 0
		}

		portrait_hud = {
			parentanchor = center
			position = { -40 0 }
		}

		icon = {
			texture = "gfx/interface/hud/bottom_left_portrait_fade.dds"
			parentanchor = bottom|left
			color = { 0.12 0.12 0.12 1 }
		}

		icon = {
			texture = "gfx/interface/hud/bottom_left_portrait_fade.dds"
			parentanchor = bottom|left
			color = { 0.15 0.15 0.15 0.3 }
		}
	}

	## Bottom left CoA
	coa_realm_medium_crown = {
		datacontext = "[GetPlayer]"
		visible = "[And(And(IsDefaultGUIMode, GetPlayer.IsRuler), Not(GetVariableSystem.Exists( 'hide_bottom_left_HUD'))))]"
		parentanchor = bottom|left

		state = {
			name = _show
			using = Animation_Curve_Default
			duration = 0.25

			position = { 0 4 }
			alpha = 1
		}

		state = {
			name = _hide
			using = Animation_Curve_Default
			duration = 0.25

			position = { 0 50 }
			alpha = 0
		}

		blockoverride "coa_button"
		{
			tooltip = "[GetPlayer.GetDefaultRealmFlagTooltipPrimaryTitleClickInfo]"
			onclick = "[DefaultOnCoatOfArmsClick(GetPlayer.GetPrimaryTitle.GetID)]"
		}
	}

	### Lifestyle
	flowcontainer = {
		name = "bottom_left_bar"
		visible = "[And( Not( IsPauseMenuShown ), And(And(IsDefaultGUIMode, GetPlayer.IsValid), Not(GetVariableSystem.Exists( 'hide_bottom_left_HUD')))))]"
		parentanchor = bottom|left
		position = { 66 0 }
		ignoreinvisible = yes
		alwaystransparent = no

		state = {
			name = _show
			using = Animation_Curve_Default
			duration = 0.21

			position = { 66 0 }
			alpha = 1
		}

		state = {
			name = _hide
			using = Animation_Curve_Default
			duration = 0.21

			position = { 30 50 }
			alpha = 0
		}

		spacer = {
			size = { 4 0 }
		}


		flowcontainer = {
			ignoreinvisible = yes
			margin_bottom = 5

			button_normal = {
				name = "lifestyle_button"
				visible = "[GetPlayer.IsAdult]"

				tooltip = "PLAYER_LIFESTYLE_TOOLTIP"
				using = tooltip_ne

				onclick = "[OpenLifestyleView( GetPlayer )]"
				size = { 55 55 }

				icon = {
					texture = "gfx/interface/buttons/button_lifestyles_base.dds"
					size = { 100% 100% }
				}

				icon = {
					name = "progress_frame"
					texture = "gfx/interface/progressbars/action_progress_frame.dds"
					size = { 100% 100% }
					alpha = 0.5
				}

				highlight_icon_lifestyle_focus = {
					name = "tutorial_highlight_lifestyle_HUD_button"
					texture = "[GetPlayer.GetFocus.GetIcon]"
					alwaystransparent = yes
					size = { 100% 100% }

					modify_texture = {
						texture = "gfx/interface/icons/focuses/hud_icon_mask.dds"
						blend_mode = alphamultiply
					}
				}

				icon = {
					visible = "[Or(GetPlayer.CanPlayerChangeMyFocus, Not( GetPlayer.GetLifestyle.IsValid ))]"
					size = { 100% 100% }
					alwaystransparent = yes
					texture = "[GetPlayer.GetFocus.GetIcon]"

					modify_texture = {
						texture = "gfx/interface/icons/focuses/hud_icon_mask.dds"
						blend_mode = alphamultiply
					}

					modify_texture = {
						texture = "gfx/interface/colors/gold.dds"
						blend_mode = add

					}

					modify_texture = {
						texture = "gfx/interface/colors/red.dds"
						blend_mode = colordodge
					}

					state = {
						name = a
						next = b
						alpha = 0
						trigger_on_create = yes
						duration = 1.2
						using = Animation_Curve_Default
					}

					state = {
						name = b
						next = a
						alpha = 0.8
						duration = 0.6
						using = Animation_Curve_Default
					}
				}

				progresspie = {
					name = "progress"
					size = { 55 55 }
					texture = "gfx/interface/progressbars/action_progress_thin.dds"
					framesize = { 124 124 }
					frame = 2
					value = "[GetPlayer.GetLifestyleExperienceProgress( GetPlayer.GetLifestyle.Self )]"
				}

				button_round = {
					datacontext = "[GetPlayer]"
					visible = "[And(GreaterThan_int32( Character.GetTotalPerkPoints, '(int32)0' ), Character.IsLocalPlayer)]"
					parentanchor = bottom|right
					position = { 7 3 }
					size = { 28 28 }
					framesize = { 82 82 }
					upframe = 1
					uphoverframe = 1
					uppressedframe = 1
					alwaystransparent = yes

					text_single = {
						parentanchor = center
						datacontext = "[GetPlayer]"
						text = "[Character.GetTotalPerkPoints]"
						default_format = "#high"
						max_width = 180
						align = nobaseline

						# animation_attention = {
						# 	visible = "[GreaterThan_int32( GetPlayer.GetTotalPerkPoints, '(int32)0' )]"
						# }
					}
				}

				animation_sonar = {
					texture = "gfx/interface/component_effects/effect_sonar_ring.dds"
					visible = "[GreaterThan_int32( GetPlayer.GetTotalPerkPoints, '(int32)0' )]"
				}
			}

			button_normal = {
				name = "education_button"
				visible = "[Not(GetPlayer.IsAdult)]"

				tooltip = "PLAYER_EDUCATION_FOCUS_TOOLTIP"
				using = tooltip_ne

				onclick = "[OpenEducationFocusView( GetPlayer )]"
				size = { 55 55 }

				icon = {
					texture = "gfx/interface/buttons/button_lifestyles_base.dds"
					size = { 100% 100% }
				}

				highlight_icon_lifestyle_focus = {
					texture = "[GetPlayer.GetFocus.GetIcon]"
					onclick = "[OpenEducationFocusView( GetPlayer )]"
					size = { 100% 100% }
					gfxtype = togglepushbuttongfx
					effectname = "NoHighlight"
					framesize = { 140 140 }

					modify_texture = {
						texture = "gfx/interface/icons/focuses/hud_icon_mask.dds"
						blend_mode = alphamultiply
					}
				}
			}
		}

		spacer = {
			size = { 6 0 }
		}

		widget = {
			name = "stress_widget"
			size = { 110 55 }

			widget = {
				parentanchor = center
				size = { 180 108 }

				tooltip = "PLAYER_STRESS_TOOLTIP"
				using = tooltip_ne

				widget = {
					name = "progressbar"
					parentanchor = center
					widgetanchor = left|vcenter
					position = { -13 0 }
					size = { 60 20 }

					background = {
						texture = "gfx/interface/colors/white.dds"
						color = { 0.1 0.1 0.1 0.8 }
					}

					icon = {
						visible = "[EqualTo_int32(GetPlayer.GetStressLevel, '(int32)2')]"
						size = { 100% 100% }
						texture = "gfx/interface/colors/white.dds"
						color = { 1 0.1 0.1 0.2 }

						using = Animation_ShowHide_Standard

						state = {
							name = a
							next = b
							trigger_on_create = yes

							using = Animation_Curve_Default
							duration = 0.8
							alpha = 0
						}

						state = {
							name = b
							next = a

							using = Animation_Curve_Default
							duration = 1.5
							alpha = 1
						}
					}

					hbox = {
						widget = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							layoutstretchfactor_horizontal = "[GetProgressBarValueMaxScaled( GetPlayer.GetStressProgress, '(float)100', '(int32)60' )]"

							progressbar_hud_stress = {
								visible = "[GreaterThanOrEqualTo_int32(GetPlayer.GetStressLevel, '(int32)3')]"
								size = { 100% 100% }

								using = Animation_ShowHide_Standard

								blockoverride "bar_color"
								{
									texture = "gfx/interface/colors/red.dds"
								}

								blockoverride "bar_color_flow"
								{
									texture = "gfx/interface/colors/gold.dds"
									alpha = 0.7
								}
							}

							progressbar_hud_stress = {
								visible = "[EqualTo_int32(GetPlayer.GetStressLevel, '(int32)2')]"
								size = { 100% 100% }

								using = Animation_ShowHide_Standard

								blockoverride "bar_color"
								{
									texture = "gfx/interface/colors/orange.dds"
								}

								blockoverride "bar_color_flow"
								{
									texture = "gfx/interface/colors/white.dds"
									alpha = 0.3
								}
							}

							progressbar_hud_stress = {
								visible = "[EqualTo_int32(GetPlayer.GetStressLevel, '(int32)1')]"
								size = { 100% 100% }

								using = Animation_ShowHide_Standard

								blockoverride "bar_color"
								{
									texture = "gfx/interface/colors/gold_darker.dds"
								}

								blockoverride "bar_color_flow"
								{
									texture = "gfx/interface/colors/white.dds"
									alpha = 0.3
								}
							}

							progressbar_hud_stress = {
								visible = "[EqualTo_int32(GetPlayer.GetStressLevel, '(int32)0')]"
								size = { 100% 100% }

								using = Animation_ShowHide_Standard

								blockoverride "bar_color"
								{
									texture = "gfx/interface/colors/blue.dds"
								}

								blockoverride "bar_color_flow"
								{
									texture = "gfx/interface/colors/white.dds"
									alpha = 0.3
								}
							}
						}

						widget = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							layoutstretchfactor_horizontal = "[GetProgressBarValueMaxOtherScaled( GetPlayer.GetStressProgress, '(float)100', '(int32)60' )]"
						}
					}
				}

				widget = {
					size = { 100% 100% }

					progressbar_hud_stress_glow = {
						texture = "gfx/interface/hud/hud_stress_glow_red.dds"

						blockoverride "animation_trigger_1"
						{
							name = "stress_level_increase"
						}

						blockoverride "animation_trigger_2"
						{
							name = "stress_increase"
						}
					}

					progressbar_hud_stress_glow = {
						texture = "gfx/interface/hud/hud_stress_glow_blue.dds"

						blockoverride "animation_trigger_1" {
							name = "stress_level_decrease"
						}

						blockoverride "animation_trigger_2"
						{
							name = "stress_decrease"
						}
					}

					progressbar_hud_stress_glow = {
						visible = "[EqualTo_int32(GetPlayer.GetStressLevel, '(int32)3')]"
						texture = "gfx/interface/hud/hud_stress_glow_red.dds"

						blockoverride "animation_trigger_1" {
							name = "lvl3_fire"
							trigger_on_create = yes
						}

						blockoverride "animation_trigger_2" {}
						blockoverride "lvl_3" {}
					}

					icon = {
						parentanchor = center
						position = { -30 0 }
						size = { 30 30 }
						texture = "gfx/interface/colors/white.dds"
						using = Color_Red


						modify_texture = {
							name = "mask_1"
							texture = "gfx/interface/component_masks/mask_glow.dds"
							blend_mode = alphamultiply
							rotate_uv = 1
						}

						modify_texture = {
							name = "mask_2"
							texture = "gfx/interface/component_masks/mask_glow.dds"
							blend_mode = alphamultiply
							rotate_uv = -1
						}

						modify_texture = {
							name = "mask_3"
							texture = "gfx/interface/component_masks/mask_clouds.dds"
							blend_mode = alphamultiply
							alpha = 0.1
						}

						modify_texture = {
							name = "mask_4"
							texture = "gfx/interface/component_masks/mask_circle.dds"
							blend_mode = mask
						}

						modify_texture = {
							name = "mask_3"
							texture = "gfx/interface/colors/gold.dds"
							blend_mode = add
						}

						state = {
							name = "stress_level_increase"
							next = b

							using = Animation_Curve_Default
							scale = 1
							alpha = 0
						}

						state = {
							name = b
							next = c

							duration = 0.6
							bezier = { 0.5 0 1 0.5 }

							scale = 5
							alpha = 0.7
						}

						state = {
							name = c
							duration = 0.3
							alpha = 0
							scale = 6
						}

						state = {
							name = rotate_a
							next = rotate_b
							trigger_on_create = yes

							modify_texture = {
								name = "mask_1"
								rotate_uv = 1
							}
						}

						state = {
							name = rotate_a
							next = rotate_b

							duration = 1

							modify_texture = {
								name = "mask_1"
								rotate_uv = 180
							}
						}

						state = {
							name = rotate_a_2
							next = rotate_b_2
							trigger_on_create = yes

							modify_texture = {
								name = "mask_2"
								rotate_uv = -1
							}
						}

						state = {
							name = rotate_a_2
							next = rotate_b_2

							duration = 1

							modify_texture = {
								name = "mask_2"
								rotate_uv = -180
							}
						}

						state = {
							name = rotate_a_3
							next = rotate_b_3
							trigger_on_create = yes

							modify_texture = {
								name = "mask_3"
								rotate_uv = 0
								alpha = 0.1
							}
						}

						state = {
							name = rotate_a_3
							next = rotate_b_3

							duration = 1

							modify_texture = {
								name = "mask_3"
								rotate_uv = 40
								alpha = 0.8
							}
						}
					}

					icon = {
						size = { 100% 100% }
						texture = "gfx/interface/skinned/hud_stress_bg.dds"

						icon = {
							parentanchor = vcenter
							position = { 41 0 }
							size = { 35 35 }

							texture = "gfx/interface/icons/stress/icon_stress_level.dds"
							framesize = { 70 70 }
							frame = "[IntToFrameIndex( GetPlayer.GetStressLevel )]"

							modify_texture = {
								visible = "[GreaterThanOrEqualTo_int32(GetPlayer.GetStressLevel, '(int32)2')]"
								name = "lvl3_glow"
								texture = "gfx/interface/colors/gold.dds"
								blend_mode = colordodge
								alpha = 0
							}

							modify_texture = {
								name = "lvl_increase"
								texture = "gfx/interface/colors/gold.dds"
								blend_mode = colordodge
								alpha = 0
							}

							state = {
								name = a
								next = b
								duration = 0.6
								trigger_on_create = yes
								using = Animation_Curve_Default

								modify_texture = {
									name = "lvl3_glow"
									alpha = 0.3
								}
							}

							state = {
								name = b
								next = a
								duration = 1.5
								using = Animation_Curve_Default

								modify_texture = {
									name = "lvl3_glow"
									alpha = 0
								}
							}

							state = {
								name = "stress_level_increase"
								next = "stress_level_increase_2"

								modify_texture = {
									name = "lvl_increase"
									alpha = 0
								}
							}

							state = {
								name = "stress_level_increase_2"
								next = "stress_level_increase_3"
								duration = 0.4
								bezier = { 0.5 0 1 0.5 }

								modify_texture = {
									name = "lvl_increase"
									alpha = 0.7
								}
							}

							state = {
								name = "stress_level_increase_3"
								duration = 0.5
								bezier = { 0 0.5 0.5 1 }

								modify_texture = {
									name = "lvl_increase"
									alpha = 0
								}
							}
						}
					}
				}
			}
		}

		spacer = {
			size = { 9 0 }
		}

		flowcontainer = {
			parentanchor = bottom

			button_hud_character_bar = {
				name = "house_button"
				datacontext = "[GetPlayer.GetHouse]"
				onclick = "[DefaultOnHouseCoatOfArmsClick(DynastyHouse.GetID)]"
				parentanchor = bottom

				using = tooltip_ne

				tooltipwidget = {
					using = dynasty_house_tooltip
				}

				coa_house_tiny = {
					parentanchor = center
					position = { 0 7 }
					using = tooltip_ne
					scale = 0.92

					blockoverride "coa_button"
					{
						alwaystransparent = yes
					}

					blockoverride "coa_tooltip"
					{}
				}
			}

			button_hud_character_bar = {
				name = "faith_button"
				datacontext = "[GetPlayer.GetFaith]"
				parentanchor = bottom

				onclick = "[DefaultOnFaithClick(GetPlayer.GetFaith.GetID)]"

				tooltipwidget = {
					faith_tooltip_click = {}
				}

				highlight_icon = {
					texture = "[Faith.GetIcon]"
					size = { 40 40 }
					position = { 0 4 }
					parentanchor = center

					glow = {
						color = { 0 0 0 0.8 }
						glow_radius = 3
						using = Glow_Standard
					}
				}
			}

			button_hud_character_bar = {
				name = "innovations_button"
				datacontext = "[GetPlayer.GetCulture]"
				parentanchor = bottom
				onclick = "[DefaultOnCultureClick(Culture.GetID)]"

				tooltipwidget = {
					culture_tooltip_click = {}
				}

				highlight_icon = {
					parentanchor = center
					position = { 0 5}
					size = { 40 40 }
					texture = "gfx/interface/icons/icon_culture.dds"

					glow = {
						color = { 0 0 0 0.8 }
						glow_radius = 3
						using = Glow_Standard
					}
				}
			}
		}

		widget_stress_sounds = {}
	}

	######################################################
	################ MAPMODES AND WARS ###################
	######################################################

	map_modes_debug = {
		visible = "[And( InDebugMode, And(IsDefaultGUIMode, Not(IsRightWindowOpen)))]"
		parentanchor = bottom|right
		position = { 0 -220 }

		filter_mouse = all
		alwaystransparent = no
		scale = 0.9
	}

	### WARS SCHEMES AND MAPMODES
	flowcontainer = {
		visible = "[And(IsDefaultGUIMode, Not(IsRightWindowOpen))]"
		parentanchor = bottom|right
		widgetanchor = top|right
		position = { 0 -155 }
		alwaystransparent = yes
		ignoreinvisible = yes
		filter_mouse = all
		allow_outside = yes
		spacing = 30

		state = {
			name = _show
			using = Animation_FadeIn_Quick
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
		}

		## Wars
		flowcontainer = {
			name = "wars_and_schemes"
			ignoreinvisible = yes
			margin_top = 35

			flowcontainer = {
				name = "player_schemes"
				datamodel = "[InGameBottomBar.GetSchemes]"
				parentanchor = vcenter
				spacing = 5
				margin = { 5 0 }

				item = {
					button_normal = {
						name = "tutorial_highlight_lifestyle_HUD_button"
						onclick = "[BottomBarSchemeItem.OnClick]"
						datacontext = "[BottomBarSchemeItem.GetScheme]"
						tooltip = "BOTTOMBAR_SCHEME_TOOLTIP"
						size = { 60 60 }

						icon = {
							texture = "gfx/interface/buttons/button_lifestyles_base.dds"
							size = { 100% 100% }
						}

						icon = {
							name = "progress_frame"
							texture = "gfx/interface/progressbars/action_progress_frame.dds"
							size = { 100% 100% }
							parentanchor = center
							alpha = 0.5
						}

						progresspie = {
							name = "progress"
							size = { 60 60 }
							texture = "gfx/interface/progressbars/action_progress_thin.dds"
							framesize = { 124 124 }
							frame = 2
							widgetanchor = top|hcenter
							parentanchor = top|hcenter
							value = "[Scheme.GetProgressBar]"
						}

						highlight_icon = {
							visible = "[Not(Scheme.GetSchemeType.IsHostile)]"
							texture = "gfx/interface/icons/schemes/icon_scheme_personal.dds"
							alwaystransparent = yes
							size = { 45 45 }
							parentanchor = center
						}

						highlight_icon = {
							visible = "[Scheme.GetSchemeType.IsHostile]"
							texture = "gfx/interface/icons/icon_scheme.dds"
							alwaystransparent = yes
							size = { 45 45 }
							parentanchor = center
						}
					}
				}
			}

			button_frontend = {
				name = "tutorial_highlight_raise_troops"
				size = { 200 64 }
				datacontext = "[GetPlayer]"
				visible = "[And( Character.IsAtWar, Not(Character.HasRaisedRegiments)))]"
				parentanchor = vcenter

				enabled = "[PlayerCanRaiseAnyRallyPoint]"
				onclick = "[PlayerRaiseAllRegiments]"
				clicksound = "event:/SFX/UI/Unit/Army/sfx_ui_raise_army"

				tooltip = "[GetPlayerRaiseAllTooltip]"
				using = tooltip_ne

				text = "RAISE_ALL"
				margin_left = 45

				icon = {
					texture = "gfx/interface/icons/icon_banner.dds"
					size = { 40 40 }
					alwaystransparent = yes
					parentanchor = left|vcenter
					position = { 5 0 }
				}
			}

			button_frontend = {
				size = { 200 64 }
				datacontext = "[GetPlayer]"
				visible = "[PlayerShouldDisbandAll]"
				parentanchor = vcenter

				onclick = "[PlayerDisbandAll]"
				enabled = "[PlayerCanDisbandAll]"
				clicksound = "event:/SFX/UI/Unit/Army/sfx_ui_unit_army_disband"

				tooltip = "[GetDisbandAllTooltip]"
				using = tooltip_ne

				text = "DISBAND_ALL"
				margin_left = 45

				icon = {
					texture = "gfx/interface/icons/icon_banner.dds"
					size = { 40 40 }
					alwaystransparent = yes
					parentanchor = left|vcenter
					position = { 5 0 }
				}
			}

			flowcontainer = {
				name = "wars"
				parentanchor = vcenter

				flowcontainer = {
					name = "great_holy_wars"
					parentanchor = vcenter
					ignoreinvisible = yes

					flowcontainer = {
						datamodel = "[GetPlayer.GetFaith.GetDefensiveGreatHolyWars]"
						ignoreinvisible = yes
						parentanchor = vcenter

						item = {
							button_ghw_banner = {
								name = "defensive_ghw"
								parentanchor = vcenter

								blockoverride "ghw_tooltip"
								{
									tooltip = "GHW_OPEN_TOOLTIP_DEFENDER"
									using = tooltip_ne
								}
							}
						}
					}

					button_ghw_banner = {
						name = "player_faith_ghw"
						datacontext = "[GetPlayer.GetFaith.GetGreatHolyWar]"
						visible = "[GetPlayer.GetFaith.HasOffensiveGreatHolyWar]"
						parentanchor = vcenter

						blockoverride "ghw_tooltip"
						{
							tooltip = "GHW_OPEN_TOOLTIP_ATTACKER"
							using = tooltip_ne
						}
					}
				}

				flowcontainer = {
					name = "raids_on_me"
					datamodel = "[GetPlayer.GetHostileRaiders]"
					parentanchor = vcenter

					item = {
						button_raid_banner = {
							parentanchor = vcenter
							tooltip = "RAID_ON_ME_TOOLTIP"
						}
					}
				}

				flowcontainer = {
					name = "raids_by_me"
					datamodel = "[GetPlayer.GetRaidTargets]"
					parentanchor = vcenter

					item = {
						button_raid_banner = {
							parentanchor = vcenter
							tooltip = "RAID_BY_ME_TOOLTIP"
						}
					}
				}

				flowcontainer = {
					name = "regular_wars"
					datamodel = "[InGameBottomBar.GetWarItems]"
					ignoreinvisible = yes

					item = {
						button_war_banner = {}
					}
				}
			}
		}

		## Map Modes
		map_modes = {
			filter_mouse = all
			alwaystransparent = no
		}
	}
}

######################################################
############# MESSAGES AND NOTIFICATIONS #############
######################################################

### Message Feed
notifications_message_feed = {
	position = { -10 -135 }
	layer = bottom
}

### Toasts
notifications_toasts = {
	widgetanchor = center
	parentanchor = top|hcenter
	position = { 0 165 }
	layer = middle
}

### Suggestions / Current Situation
notifications_suggestions = {
	layer = middle

	attachto = {
		widgetid = "suggestions_placer"
		inherit_visibility = hidden
	}
}

######################################################
################ TYPES AND TEMPLATES #################
######################################################


types HUD
{
	type Animation_HUD_daily_tick = widget {
		using = Animation_ShowHide_Quick

		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/colors/white.dds"
			shaderfile = "gfx/FX/repeat_texture.shader"
			color = { 0.63 0.59 0.68 1 }

			block "alpha"
			{
				alpha = 0.5
			}

			modify_texture = {
				name = "pattern"
				texture = "gfx/interface/component_masks/mask_clouds.dds"
				spriteType = corneredtiled
				blend_mode = alphamultiply
			}

			modify_texture = {
				texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
				blend_mode = alphamultiply
			}

			state = {
				name = a
				next = b
				duration = 0
				trigger_on_create = yes

				modify_texture = {
					name = "pattern"
					translate_uv = { 0 0 }
				}
			}

			state = {
				name = b
				next = a
				block "duration"
				{
					duration = 2
				}

				modify_texture = {
					name = "pattern"
					translate_uv = { -1 0 }
				}
			}
		}
	}

	type progressbar_hud_stress_glow = icon {
		size = { 100% 100% }

		block "lvl_3"
		{
			alpha = 0
		}

		shaderfile = "gfx/FX/repeat_texture.shader"

		modify_texture = {
			name = "clouds"
			texture = "gfx/interface/component_masks/mask_clouds.dds"
			blend_mode = alphamultiply
			spriteType = corneredtiled
			texture_density = 3
		}

		state = {
			name = mask_a
			next = mask_b
			trigger_on_create = yes

			modify_texture = {
				name = "clouds"
				translate_uv = { 0 -1 }
			}
		}

		state = {
			name = mask_b
			next = mask_a
			duration = 8

			modify_texture = {
				name = "clouds"
				translate_uv = { 0 1 }
			}
		}

		state = {
			block "animation_trigger_1"
			{
				name = "stress_level_increase"
			}
			next = "fade_out"

			duration = 0.2
			delay = 0.3
			bezier = { 0.5 0 1 0.5 }
			alpha = 1
		}

		block "lvl_3" {
			state = {
				block "animation_trigger_2"
				{
					name = "stress_increase"
				}
				next = "fade_out"

				duration = 0.2
				delay = 0.3
				bezier = { 0.5 0 1 0.5 }
				alpha = 1
			}

			state = {
				name = "fade_out"

				duration = 1.5
				bezier = { 0 0.5 0.5 1 }
				alpha = 0
			}
		}
	}

	type progressbar_hud_stress = icon {
		shaderfile = "gfx/FX/repeat_texture.shader"
		alpha = 0.8

		block "bar_color"
		{
			# texture = "gfx/interface/colors/red.dds"
		}

		modify_texture = {
			texture = "gfx/interface/component_masks/mask_rough_edges.dds"
			spriteType = Corneredtiled
			spriteborder = { 20 20 }
			blend_mode = alphamultiply
			texture_density = 5
		}

		modify_texture = {
			texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
			blend_mode = alphamultiply
			alpha = 0.3
		}

		modify_texture = {
			texture = "gfx/interface/component_masks/mask_scratches.dds"
			blend_mode = alphamultiply
			spriteType = corneredtiled
			alpha = 0.3
			texture_density = 3
		}

		modify_texture = {
			name = "flash"
			texture = "gfx/interface/colors/white.dds"
			blend_mode = colordodge
			alpha = 0
		}

		modify_texture = {
			visible = "[GreaterThanOrEqualTo_int32(GetPlayer.GetStressLevel, '(int32)2')]"
			name = "lvl3_glow"
			texture = "gfx/interface/colors/gold.dds"
			blend_mode = colordodge
			alpha = 0
		}

		modify_texture = {
			name = "clouds"
			texture = "gfx/interface/component_masks/mask_clouds_solid.dds"
			blend_mode = mask
			spriteType = corneredtiled
			texture_density = 1
		}

		modify_texture = {
			block "bar_color_flow"
			{
				# texture = "gfx/interface/colors/yellow.dds"
				alpha = 0.3
			}
			blend_mode = colordodge
		}

		state = {
			name = "lvl3_glow_a"
			next = "lvl3_glow_b"
			duration = 0.6
			trigger_on_create = yes
			using = Animation_Curve_Default

			modify_texture = {
				name = "lvl3_glow"
				alpha = 0.5
			}
		}

		state = {
			name = "lvl3_glow_b"
			next = "lvl3_glow_a"
			duration = 1.5
			using = Animation_Curve_Default

			modify_texture = {
				name = "lvl3_glow"
				alpha = 0
			}
		}

		state = {
			name = "stress_level_increase"
			next = "fade_out"

			duration = 0.1
			bezier = { 0.5 0 1 0.5 }

			modify_texture = {
				name = "flash"
				alpha = 0.6
			}
		}

		state = {
			name = "stress_increase"
			next = "fade_out"

			duration = 0.1
			bezier = { 0.5 0 1 0.5 }

			modify_texture = {
				name = "flash"
				alpha = 0.6
			}
		}

		state = {
			name = "fade_out"

			duration = 0.8
			bezier = { 0 0.5 0.5 1 }


			modify_texture = {
				name = "flash"
				alpha = 0
			}
		}

		state = {
			name = a
			next = b
			trigger_on_create = yes

			modify_texture = {
				name = "clouds"
				translate_uv = { 1 0 }
			}
		}

		state = {
			name = b
			next = a
			duration = 15

			modify_texture = {
				name = "clouds"
				translate_uv = { -1 0 }
			}
		}
	}

	type button_war_banner = button_normal {
		size = { 78 82 }
		onclick = "[WarItem.OnClick]"
		tooltip = "[WarItem.GetTooltip]"
		using = tooltip_ne

		animation_sonar = {
			visible = "[WarItem.CanEnforceVictory]"
			texture = "gfx/interface/component_masks/mask_glow.dds"
			using = Color_Orange
		}

		icon = {
			name = "enforce_victory_glow"
			visible = "[WarItem.CanEnforceVictory]"
			parentanchor = center
			size = { 100% 100% }
			scale = 1.2
			texture = "gfx/interface/icons/war_status/war_won_glow.dds"

			state = {
				trigger_on_create = yes
				name = a
				next = b

				using = Animation_Curve_Default
				duration = 1
				alpha = 1
			}

			state = {
				name = b
				next = a

				using = Animation_Curve_Default
				duration = 1.6
				alpha = 0.2
			}
		}

			button = {
				name = "enforce_victory_icon"
				visible = "[WarItem.CanEnforceVictory]"
				parentanchor = hcenter
			position = { 0 -27 }
				texture = "gfx/interface/icons/war_status/war_won_icon.dds"

			modify_texture = {
				name = "shimmer_war_banner"
				texture = "gfx/interface/component_effects/effect_shimmer.dds"
				blend_mode = colordodge
				translate_uv = { 1 1 }
				alpha = 0.8
			}

			state = {
				name = shimmer
				next = pause
				trigger_when = "[WarItem.CanEnforceVictory]"
				delay = 0.5
				bezier = { 0 0.9 1 0.4 }

				modify_texture = {
					name = "shimmer_war_banner"
					translate_uv = { 1 0.8 }
					alpha = 0.5
				}
			}

			state = {
				name = pause
				duration = 0.8

				modify_texture = {
					name = "shimmer_war_banner"
					translate_uv = { -1 -1 }
					alpha = 0.5
				}
			}
		}

		highlight_icon = {
			name = "war_icon"
			visible = "[WarItem.IsPlayerParticipant]"
			parentanchor = center
			size = { 100% 100% }
			texture = "gfx/interface/icons/war_status/war_icon.dds"

			modify_texture = {
				name = "shimmer_war_banner"
				texture = "gfx/interface/component_effects/effect_shimmer.dds"
				blend_mode = colordodge
				translate_uv = { 1 1 }
			}

			state = {
				name = shimmer
				next = pause
				trigger_when = "[WarItem.CanEnforceVictory]"
				delay = 0.5
				bezier = { 0 0.9 1 0.4 }

				modify_texture = {
					name = "shimmer_war_banner"
					translate_uv = { 1 0.5 }
					alpha = 0.5
				}
			}

			state = {
				name = pause
				duration = 0.8

				modify_texture = {
					name = "shimmer_war_banner"
					translate_uv = { -1 -1 }
					alpha = 0.5
				}
			}
		}

		highlight_icon = {
			name = "war_icon_liege"
			visible = "[Not(WarItem.IsPlayerParticipant)]"
			parentanchor = center
			size = { 100% 100% }
			texture = "gfx/interface/icons/war_status/war_icon_liege.dds"
		}

		coa_realm_small = {
			name = "enemy_realm"
			datacontext = "[WarItem.GetWar.GetPrimaryPlayerEnemy]"
			parentanchor = hcenter
			scale = 0.9
			position = { 0 12 }
			tooltip_enabled = no
			alwaystransparent = yes
		}

		text_single = {
			name = "warscore"
			parentanchor = bottom|hcenter
			position = { 0 -7 }
			size = { 50 10 }
			align = center
			text = "[WarItem.GetWarScoreFraction|0%=+]"
		}

		widget = {
			visible = "[WarItem.CanEnforceVictory]"

			state = {
				name = _show

				start_sound = {
					soundeffect = "event:/SFX/UI/War/sfx_ui_war_enforce_demand"
					soundparam = {
						name = StateChange
						value = 1.5
					}
				}
			}
		}
	}

	type button_ghw_banner = button_normal {
		size = { 78 82 }
		onclick = "[OpenGreatHolyWarWindow(GreatHolyWar.GetID)]"

		block "ghw_tooltip"
		{
			tooltip = "#D no tooltip :(#!"
		}

		button = {
			name = "holy_war_icon_started"
			visible = "[GreatHolyWar.HasWarStarted]"
			onclick = "[OpenGreatHolyWarWindow(GreatHolyWar.GetID)]"
			parentanchor = center
			size = { 100% 100% }
			texture = "gfx/interface/icons/war_status/holy_war_icon_started.dds"
		}

		button = {
			name = "holy_war_icon_prep"
			visible = "[Not(GreatHolyWar.HasWarStarted)]"
			onclick = "[OpenGreatHolyWarWindow(GreatHolyWar.GetID)]"
			parentanchor = center
			size = { 100% 100% }
			texture = "gfx/interface/icons/war_status/holy_war_icon_prep.dds"
		}

		button = {
			name = "faith_icon"
			datacontext = "[GreatHolyWar.GetFaith]"
			onclick = "[OpenGreatHolyWarWindow(GreatHolyWar.GetID)]"
			parentanchor = center
			position = { 1 -3 }
			size = { 35 35 }
			texture = "[Faith.GetIcon]"
		}
	}

	type button_raid_banner = button_normal {
		size = { 78 82 }
		onclick = "[DefaultOnCharacterClick(Character.GetID)]"
		using = tooltip_ne

		highlight_icon = {
			texture = "gfx/interface/icons/war_status/raid_icon.dds"
			size = { 100% 100% }
			parentanchor = center
		}

		coa_realm_small = {
			name = "enemy_realm"
			parentanchor = hcenter
			scale = 0.9
			position = { 0 12 }
			tooltip_enabled = no
			alwaystransparent = yes
		}

		text_single = {
			name = "time_left"
			parentanchor = bottom|hcenter
			position = { 0 -7 }
			size = { 50 10 }
			align = center
			text = "[GetPlayer.GetRaidHostilityEnd( Character.Self ).GetTimeDiffFromNow]"

		}
	}

	type button_hud_character_bar = button_normal {
		effectname = "NoHighlight"

		framesize = { 102 104}
		size = { 51 52 }
		texture = "gfx/interface/skinned/button_hud_character_bar.dds"
		using = tooltip_ne


		state = {
			name = _show
			frame = 1
			position_y = 0

			using = Animation_Curve_Default
			duration = 0.25
		}

		state = {
			name = _mouse_hierarchy_enter
			frame = 2

			using = Animation_Curve_Default
			duration = 0.1
		}

		state = {
			name = _mouse_leave
			frame = 1

			using = Animation_Curve_Default
			duration = 0.25
		}

		state = {
			name = _mouse_press
			frame = 3
			position_y = 3
		}

		state = {
			name = _mouse_release
			frame = 2
			position_y = 0

			using = Animation_Curve_Default
			duration = 0.25
		}
	}

	type button_hud_main_tab = widget {
		size = { 45 45 }
		using = tooltip_ws
		tooltip_offset = { 35 0 }

		button_normal = {
			parentanchor = center
			size = { 45 45 }

			scale = 1

			block "maintab_button" {}

			modify_texture = {
				name = "glow"
				texture = "gfx/interface/component_effects/effect_shimmer.dds"
				blend_mode = colordodge
				translate_uv = { 1 0 }
				alpha = 0
			}

			state = {
				name = _mouse_enter
				duration = 0.03
				scale = 1.2
				position_x = -3

				using = Animation_Curve_Default

				modify_texture = {
					name = "glow"
					translate_uv = { 0 0 }
					alpha = 0.4
				}
			}

			state = {
				name = _mouse_leave
				duration = 0.1
				scale = 1
				position_x = 0

				using = Animation_Curve_Default

				modify_texture = {
					name = "glow"
					translate_uv = { 1 0 }
					alpha = 0
				}
			}

			state = {
				name = _mouse_press

				using = Animation_Curve_Default
			}

			state = {
				name = _mouse_release
				duration = 0.15

				using = Animation_Curve_Default
			}
		}
	}

	type hotkeys_HUD = widget {
		# Mapmodes
		button_normal = {
			onclick = "[SetMapMode('players')]"
			shortcut = "map_mode_7"
			enabled = "[Or(GameHasMultiplePlayers, InDebugMode)]"
		}

		button_normal = {
			onclick = "[SetMapMode('dejure_duchies')]"
			shortcut = "map_mode_9"
			shortcut = "mapmode_duchies_secondary"
		}

		button_normal = {
			onclick = "[SetMapMode('dejure_kingdoms')]"
			shortcut = "map_mode_10"
			shortcut = "mapmode_kingdoms_secondary"

		}

		button_normal = {
			onclick = "[SetMapMode('dejure_empires')]"
			shortcut = "map_mode_11"
			shortcut = "mapmode_empires_secondary"
		}

		button_normal = {
			onclick = "[SetMapMode('religions')]"
			shortcut = "map_mode_3"
			shortcut = "mapmode_faith_secondary"
		}

		button_normal = {
			onclick = "[SetMapMode('cultures')]"
			shortcut = "map_mode_2"
			shortcut = "mapmode_culture_secondary"
		}

		button_normal = {
			onclick = "[SetMapMode('houses')]"
			shortcut = "map_mode_4"
			shortcut = "mapmode_house_secondary"
		}

		button_normal = {
			onclick = "[SetMapMode('realms')]"
			onclick = "[ClearExploringRealms]"
			shortcut = "map_mode_1"
		}

		button_normal = {
			onclick = "[SetMapMode('government')]"
			shortcut = "map_mode_5"
		}

		button_normal = {
			onclick = "[SetMapMode('dejure_counties')]"
			shortcut = "map_mode_6"
		}

		button_normal = {
			onclick = "[SetMapMode('simple_terrain')]"
			shortcut = "map_mode_12"
		}

		button_normal = {
			onclick = "[SetMapMode('county_development')]"
			shortcut = "map_mode_13"
		}

		button_normal = {
			name = "find_title_shortcut"
			onclick = "[ToggleGameView( 'find_title' )]"
			onclick = "[GetVariableSystem.Clear( 'extra_buttons_expand' )]"
			shortcut = "find_title_shortcut"
		}

		# 0 size button for shortcut to work
		button_normal = {
			name = "find_character_shortcut"
			onclick = "[ToggleGameView( 'character_finder' )]"
			onclick = "[GetVariableSystem.Clear( 'extra_buttons_expand' )]"
			shortcut = "character_finder"
		}

		# 0 size button for shortcut to work
		button_normal = {
			name = "encyclopedia_shortcut"
			onclick = "[ToggleEncyclopedia]"
			onclick = "[GetVariableSystem.Clear( 'extra_buttons_expand' )]"
			shortcut = "encyclopedia"
		}
	}

	type button_pause_hud = button_round {
		size = { 33 33 }

		enabled = "[Not(IsGameOver)]"
		onclick = "[OnPause]"
		oversound = "event:/SFX/UI/Generic/sfx_ui_generic_pointer_over"
		clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_select"

		button_play = {
			visible = "[IsGamePaused]"
			size = { 35 35 }

			tooltip = "[SelectLocalization( IsGameOver, 'UNPAUSE_GAME_OVER', 'UNPAUSE_GAME')]"
			using = tooltip_ne
			alwaystransparent = yes
			parentanchor = center
		}

		button_pause = {
			visible = "[Not(IsGamePaused)]"
			size = { 35 35 }

			tooltip = "PAUSE_GAME"
			using = tooltip_ne
			alwaystransparent = yes
			parentanchor = center
		}
	}

	type container_resource_balance = container {
		text_single = {
			name = "balance_pos"
			visible = "[GreaterThanOrEqualTo_CFixedPoint(PlayerValueItem.GetBalance, '(CFixedPoint)0')]"
			text = "[PlayerValueItem.GetBalance|1=]"
			max_width = 110

			default_format = "#low"
		}

		text_single = {
			name = "balance_neg"
			visible = "[LessThan_CFixedPoint(PlayerValueItem.GetBalance, '(CFixedPoint)0')]"
			text = "[PlayerValueItem.GetBalance|1=]"
			max_width = 110

			default_format = "#N"
		}
	}

	type container_saving_indicator = container {
		visible = yes

		background = {
			name = "bg"
			texture = "gfx/interface/tooltips/tooltip_bg.dds"
			spriteType = Corneredtiled
			gfxtype = icongfx
			spriteborder = { 2 2 }
			shaderfile = "gfx/FX/pdxgui_default.shader"

		}

		background = {
			name = "frame"
			texture = "gfx/interface/tooltips/tooltip_frame.dds"
			gfxtype = icongfx
			spriteType = Corneredtiled
			spriteborder = { 20 20 }
			shaderfile = "gfx/FX/pdxgui_default.shader"


			modify_texture = {
				name = "overlay"
				texture = "gfx/interface/component_overlay/overlay_window.dds"
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				blend_mode = overlay
			}
		}

		flowcontainer = {
			spacing = 15
			margin = { 20 15 }

			progressbar = {
				size = { 44 44 }
				gfxtype = framedprogressbargfx
				texture = "gfx/interface/frontend/loading_progress.dds"
				framesize = { 88 88 }
				loopinterval = 2.0
				max = 0
			}

			text_single = {
				parentanchor = vcenter
				align = nobaseline
				using = Font_Size_Medium

				block "csi_text"
				{
					text = "AUTOSAVE_IN_PROGRESS"
				}
			}
		}
	}


}